{"version":3,"sources":["components/Board.js","components/BigBoard.js","components/GameStarter.js","App.js","serviceWorker.js","index.js"],"names":["Landing","props","handleCellClick","e","cell","state","startGameValue","win","undoStack","push","copy_board","board","slice","Math","floor","setState","copy_board2","check_win","console","log","axios","get","params","gameBeginner","JSON","stringify","depth","then","res","data","r","c","startGameButton","copy_board3","catch","err","handleStartHuman","handleStartAgent","handleStartGame","startGame","whoPlaysFirstDialog","handleUndoFeature","index","copy_undoStack","totalOfUndoButtons","length","buttonsToErase","i","pop","handleDepth","depth_selected","show_3x3_BoardComponent","symbol","X","style","textAlign","class","O","WA","WH","this","marginTop","heading","Container","fluid","map","row","Row","j","Col","md","cellStyle","onClick","Button","variant","size","startButton","ButtonGroup","aria-label","Component","backgroundColor","border","width","height","padding","display","lineHeight","BigBoard","outerRow","outerColumn","innerRow","innerColumn","ultimateWin","copy_bigBoard1","bigboard","moveNumber","checkValidityOfMove","copy_bigBoard2","checkPartialWin","checkboard","ultimateWinBoard","previous_move","copy_board1","rowToPlace","columnToPlace","outer_row","outer_column","inner_row","inner_column","show_9x9_BoardComponent","LA","LH","winner_symbol","winner_status","loser_symbol","loser_status","win_row","copy_bigBoard","win_column","alterBigBoardRow","alterBigBoardColumn","alterBigBoardLeftDiagonal","alterBigBoardRightDiagonal","bigBoard","copyUltimateWinBoard_1","copyUltimateWinBoard_2","check_ultimate_win","place_partial","column","cellStyle1","cellStyle2","GameStarter","showGameStarterComponent","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.dcde80ae.chunk.js","sourcesContent":["import React, { Component, useEffect } from \"react\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n} from \"mdbreact\";\nimport {\n  MDBRow,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCol,\n  MDBIcon,\n} from \"mdbreact\";\n// import { Link } from 'react-router-dom'\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n// import Sky from 'react-sky';\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nexport default class Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show_3x3_BoardComponent: this.props.show_3x3_BoardComponent,\n      board: [\n        [\" \", \" \", \" \"],\n        [\" \", \" \", \" \"],\n        [\" \", \" \", \" \"],\n      ],\n      // chosenCell: \" \",\n      gameBeginner: \" \",\n      startGameValue: false,\n      whoPlaysFirstDialog: false,\n      startGameButton: \"Start Game\",\n      symbol: {\n        X: (\n          <div style={{ textAlign: \"center\" }}>\n            <i class=\"fas fa-user-astronaut fa-6x orange-text mr-2\"></i>\n          </div>\n        ),\n        O: (\n          <div style={{ textAlign: \"center\" }}>\n            <i class=\"fas fa-robot fa-6x orange-text mr-2\"></i>\n          </div>\n        ),\n        WA: (\n          <div style={{ textAlign: \"center\" }}>\n            <i class=\"fas fa-robot fa-6x light-green-text fa-spin mr-2\"></i>\n          </div>\n        ),\n        WH: (\n          <div style={{ textAlign: \"center\" }}>\n            <i class=\"fas fa-user-astronaut fa-6x green-text fa-spin mr-2\"></i>\n          </div>\n        ),\n      },\n      win: false,\n      depth: \" \",\n      undoStack: [],\n    };\n  }\n\n  // pop()  {\n  //     // return top most element in the stack\n  //     // and removes it from the stack\n  //     // Underflow if stack is empty\n  //     if (this.state.data.length == 0) {\n  //         return \"Underflow\";\n  //     } else {\n  //     return this.state.data.pop();\n  //     }\n  // }\n\n  //     top () {\n  //       return this.data.length;\n  //     }\n\n  //     push (...element) {\n  //         for (var i of element) {\n  //             return this.state.data.push(i)\n  //         }\n  //     }\n\n  // // peek() method looks at the object at the top of this stack\n  // // without removing it from the stack.\n  // // The stack is not modified (it does not remove the element;\n  // // it only returns the element for information purposes).\n\n  //     peek () {\n  //         return this.state.data[this.state.data.length - 1];\n  //     }\n\n  //     clear () {\n  //         return this.state.data = [];\n  //     }\n\n  //     length(){\n  //         // console.log(this.state.data.length)\n  //       return this.state.data.length;\n  //   }\n\n  //     search (value) {\n  //         for (let i = 0; i < this.state.data.length; i++) {\n  //             if (this.state.data[i] === value) {\n  //                 return value;\n  //             } else {\n  //                 return false;\n  //             }\n  //         }\n  //     }\n\n  check_win(copy_board) {\n    for (let i = 0; i < 3; i++) {\n      if (\n        copy_board[i][0] === copy_board[i][1] &&\n        copy_board[i][0] === copy_board[i][2] &&\n        copy_board[i][1] === copy_board[i][2] &&\n        copy_board[i][0] !== \" \"\n      ) {\n        if (copy_board[i][0] === \"O\") {\n          copy_board[i][0] = \"WA\";\n          copy_board[i][1] = \"WA\";\n          copy_board[i][2] = \"WA\";\n        } else if (copy_board[i][0] === \"X\") {\n          copy_board[i][0] = \"WH\";\n          copy_board[i][1] = \"WH\";\n          copy_board[i][2] = \"WH\";\n        }\n        this.setState({\n          win: true,\n        });\n      }\n    }\n    for (let i = 0; i < 3; i++) {\n      if (\n        copy_board[0][i] === copy_board[1][i] &&\n        copy_board[0][i] === copy_board[2][i] &&\n        copy_board[1][i] === copy_board[2][i] &&\n        copy_board[0][i] !== \" \"\n      ) {\n        if (copy_board[0][i] === \"O\") {\n          copy_board[0][i] = \"WA\";\n          copy_board[1][i] = \"WA\";\n          copy_board[2][i] = \"WA\";\n        } else if (copy_board[0][i] === \"X\") {\n          copy_board[0][i] = \"WH\";\n          copy_board[1][i] = \"WH\";\n          copy_board[2][i] = \"WH\";\n        }\n        this.setState({\n          win: true,\n        });\n      }\n    }\n\n    if (\n      copy_board[0][0] === copy_board[1][1] &&\n      copy_board[0][0] === copy_board[2][2] &&\n      copy_board[1][1] === copy_board[2][2] &&\n      copy_board[0][0] !== \" \"\n    ) {\n      if (copy_board[0][0] === \"O\") {\n        copy_board[0][0] = \"WA\";\n        copy_board[1][1] = \"WA\";\n        copy_board[2][2] = \"WA\";\n      } else if (copy_board[0][0] === \"X\") {\n        copy_board[0][0] = \"WH\";\n        copy_board[1][1] = \"WH\";\n        copy_board[2][2] = \"WH\";\n      }\n      this.setState({\n        win: true,\n      });\n    }\n\n    if (\n      copy_board[0][2] === copy_board[1][1] &&\n      copy_board[0][2] === copy_board[2][0] &&\n      copy_board[1][1] === copy_board[2][0] &&\n      copy_board[0][2] !== \" \"\n    ) {\n      if (copy_board[0][2] === \"O\") {\n        copy_board[0][2] = \"WA\";\n        copy_board[1][1] = \"WA\";\n        copy_board[2][0] = \"WA\";\n      } else if (copy_board[0][2] === \"X\") {\n        copy_board[0][2] = \"WH\";\n        copy_board[1][1] = \"WH\";\n        copy_board[2][0] = \"WH\";\n      }\n      this.setState({\n        win: true,\n      });\n    }\n  }\n\n  handleCellClick = (e, cell) => {\n    if (this.state.startGameValue && this.state.win === false) {\n      this.state.undoStack.push(cell);\n      let copy_board = this.state.board.slice();\n      if (copy_board[Math.floor(cell / 3)][cell % 3] === \" \") {\n        copy_board[Math.floor(cell / 3)][cell % 3] = \"X\";\n      }\n      this.setState({\n        board: copy_board,\n      });\n      // console.log('hjfhhdhf')\n\n      let copy_board2 = this.state.board.slice();\n      this.check_win(copy_board2);\n\n      // this.setState({\n        // board: copy_board,\n      // });\n\n      // const sendData = {\n      //   gameBeginner: this.state.gameBeginner,\n      //   board: JSON.stringify(this.state.board),\n      //   depth: JSON.stringify(this.state.depth),\n      // }\n      \n      // useEffect(()=> {\n      //     fetch(\"/agent\").then(response =>\n      //         response.json().then(data => {\n      //             console.log(data)\n      //         }))\n      // },[])\n      // console.log(sendData)\n      console.log(this.state.win)\n      \n      // console.log(JSON.stringify(this.state.board))\n      if(this.state.win === false)\n      {\n        axios\n        .get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn\", {\n          params: {\n            gameBeginner: this.state.gameBeginner,\n            board: JSON.stringify(this.state.board),\n            depth: JSON.stringify(this.state.depth)\n          },\n        }) //route to be filled according to flask route name\n        .then((res) => {\n\n          let copy_board = this.state.board.slice();\n          // console.log(res.status)\n          // console.log(res)\n          // console.log(copy_board)\n\n          copy_board[res.data.r][res.data.c] = \"O\"       /////// will uncomment when backend and frontend are bound together because for now this will give error\n          console.log(this.state.startGameButton)\n          if(this.state.startGameButton === \"Reset Game\")\n          {\n              this.setState({\n                  board : copy_board\n              })\n                  let copy_board3 = this.state.board.slice();\n                  this.check_win(copy_board3);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      }\n    }\n  };\n\n  \n\n  handleStartHuman = (e) => {\n    console.log(\"Human begins the game!\");\n    this.setState({\n      gameBeginner: \"HUMAN\",\n    });\n  };\n\n\n\n  handleStartAgent = (e) => {\n    console.log(\"Agent begins the game!\");\n    this.setState({\n      gameBeginner: \"AGENT\",\n    });\n  };\n\n\n\n  handleStartGame = (e, startGame) => {\n    console.log(\"The game begins!\");\n    // console.log(this.state.gameBeginner)\n\n    if (startGame === \"Start Game\")\n    {\n      this.setState({\n        startGameButton: \"Reset Game\",\n        startGameValue: true,\n      });\n    } \n    else if (startGame === \"Reset Game\")\n    {\n\n      this.setState({\n        board: [\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n        ],\n        gameBeginner: \" \",\n        startGameValue: false,\n        whoPlaysFirstDialog: false,\n        startGameButton: \"Start Game\",\n        win: false,\n        depth: \" \",\n        undoStack: []\n      });\n    }\n    if(this.state.gameBeginner === \"AGENT\")\n    {\n      axios\n        .get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn\", {\n          params: {\n            gameBeginner: this.state.gameBeginner,\n            board: JSON.stringify(this.state.board),\n            depth: JSON.stringify(this.state.depth)\n          },\n        }) //route to be filled according to flask route name\n        .then((res) => {\n\n          let copy_board = this.state.board.slice();\n\n          copy_board[res.data.r][res.data.c] = \"O\"       /////// will uncomment when backend and frontend are bound together because for now this will give error\n\n          if(this.state.startGameButton === \"Reset Game\")\n          {\n            this.setState({\n              board : copy_board\n              })\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  handleUndoFeature = (e, index, cell) => {\n    let copy_board = this.state.board.slice();\n    let copy_undoStack = this.state.undoStack.slice();\n\n    let totalOfUndoButtons = copy_undoStack.length;\n    let buttonsToErase = totalOfUndoButtons - (index + 1);\n    console.log(totalOfUndoButtons);\n    console.log(buttonsToErase);\n\n    for (let i = 0; i <= buttonsToErase; i++) {\n      copy_board[Math.floor(copy_undoStack[copy_undoStack.length - 1] / 3)][\n        copy_undoStack[copy_undoStack.length - 1] % 3\n      ] = \" \";\n      copy_undoStack.pop();\n    }\n    this.setState({\n      board: copy_board,\n      undoStack: copy_undoStack,\n    });\n\n  };\n\n  handleDepth = (e, depth_selected) => {\n\n    if (this.state.depth === \" \") {\n\n      this.setState({\n        depth: depth_selected\n      });\n\n    }\n  };\n\n  render() {\n    return (\n\n      <div\n        style={{\n          marginTop: \"5%\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <h1 style={heading}>RED NINJA TIC TAC TOE</h1>\n        </div>\n        <Container>\n          <Container fluid=\"true\">\n            {this.state.board.map((row, i) => (\n              <Row>\n                {row.map((cell, j) => (\n                  <Col\n                    md\n                    style={cellStyle}\n                    onClick={(e) => this.handleCellClick(e, 3 * i + j)}\n                  >\n                    {this.state.symbol[this.state.board[i][j]]}\n                  </Col>\n                ))}\n              </Row>\n            ))}\n          </Container>\n        </Container>\n\n        <Container fluid=\"true\">\n          {this.state.undoStack.map((cell, i) => (\n            <Button onClick={(e) => this.handleUndoFeature(e, i, cell)}>\n              {i + 1}\n            </Button>\n          ))}\n        </Container>\n\n        <div style={{}}>\n          <Button\n            variant=\"info\"\n            size=\"lg\"\n            style={{ startButton }}\n            onClick={(e) => this.handleStartGame(e, this.state.startGameButton)}\n          >\n            {this.state.startGameButton}\n          </Button>{\" \"}\n        </div>\n\n        <Button variant=\"default\" onClick={(e) => this.handleStartHuman(e)}>\n          Beginner_Human\n        </Button>\n\n\n        <Button variant=\"default\" onClick={(e) => this.handleStartAgent(e)}>\n          Beginner_Agent\n        </Button>\n\n        <ButtonGroup aria-label=\"Basic example\">\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e,1)}>\n            Depth 1\n          </Button>\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e,2)}>\n            Depth 2\n          </Button>\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e,3)}>\n            Depth 3\n          </Button>\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e,4)}>\n            Depth 4\n          </Button>\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e,-1)}>\n            Ultimate\n          </Button>\n        </ButtonGroup>\n\n        {/* <i class=\"fas fa-space-shuttle fa-6x orange-text mr-2\"></i> */}\n        {/* <i class=\"fas fa-rocket fa-6x orange-text mr-2\"></i> */}\n      </div>\n    );\n  }\n}\n\n// var stack = new Landing();\n\nconst cellStyle = {\n  backgroundColor: \"black\",\n  textAlign: \"center\",\n  border: \"1px solid\",\n  width: \"10%\",\n  height: 185,\n  padding: \"3%\",\n};\n//   border-collapse: \"separate\"\n// }\nconst heading = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: \"80%\",\n  lineHeight: 1.5,\n};\n\nconst startButton = {\n  // position: 'absolute',\n  // bottom:0,\n  // right : 0\n  // left:50\n};\n\n// \"proxy\": \"http://127.0.0.1:5000/\"\n","import React, { Component,useEffect } from 'react'\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\nimport {MDBRow, MDBCard, MDBCardBody,MDBCardTitle, MDBCardText, MDBCol, MDBIcon} from \"mdbreact\";\n// import { Link } from 'react-router-dom'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport { Button, Container, Col, Row } from 'react-bootstrap'\nimport axios from 'axios';\n// import Sky from 'react-sky';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\n\n\nexport default class BigBoard extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            show_9x9_BoardComponent : this.props.show_9x9_BoardComponent,\n            startGameButton: \"Start Game\",\n            startGameValue: false,\n            ultimateWin : false,\n            gameBeginner : \" \",\n            rowToPlace : \" \",\n            columnToPlace : \" \",\n            moveNumber : 1,\n            ultimateWinBoard: [\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n              ],\n            bigboard:[\n\n                [ [ [\" \",\" \",\" \"],\n                    [\" \",\" \",\" \"],\n                    [\" \",\" \",\" \"] ], \n                    \n                    [ [\" \",\" \",\" \"],\n                      [\" \",\" \",\" \"],\n                      [\" \",\" \",\" \"] ],\n\n                      [ [\" \",\" \",\" \"],\n                        [\" \",\" \",\" \"],\n                        [\" \",\" \",\" \"] ] ], \n\n                        [ [ [\" \",\" \",\" \"],\n                    [\" \",\" \",\" \"],\n                    [\" \",\" \",\" \"] ], \n                    \n                    [ [\" \",\" \",\" \"],\n                      [\" \",\" \",\" \"],\n                      [\" \",\" \",\" \"] ],\n\n                      [ [\" \",\" \",\" \"],\n                        [\" \",\" \",\" \"],\n                        [\" \",\" \",\" \"] ] ],\n\n                        [ [ [\" \",\" \",\" \"],\n                    [\" \",\" \",\" \"],\n                    [\" \",\" \",\" \"] ], \n                    \n                    [ [\" \",\" \",\" \"],\n                      [\" \",\" \",\" \"],\n                      [\" \",\" \",\" \"] ],\n\n                      [ [\" \",\" \",\" \"],\n                        [\" \",\" \",\" \"],\n                        [\" \",\" \",\" \"] ] ]\n\n            ],\n\n            symbol : {\n                X: <div style={{textAlign:\"center\"}}>\n                <i class=\"fas fa-grin fa-3x amber-text mr-2\"></i>\n\n                {/* <i class=\"fas fa-times fa-2x amber-text mr-2\"></i> */}\n                {/* <i class=\"far fa-grin fa-3x amber-text mr-2\"></i> */}\n            </div>,\n                O: <div style={{textAlign:\"center\"}}>\n                   <i class=\"far fa-grin fa-3x pink-text mr-2\"></i>\n\n                 {/* <i class=\"far fa-circle fa-2x pink-text mr-2\"></i> */}\n                 {/* <i class=\"fas fa-grin fa-3x pink-text mr-2\"></i> */}\n            </div>,\n                WA: <div style={{textAlign:\"center\"}}>\n                <i class=\"fas fa-laugh-wink fa-3x amber-text mr-2\"></i>\n\n                {/* <i class=\"fas fa-times fa-2x amber-text mr-2\"></i> */}\n                {/* <i class=\"fas fa-robot fa-2x light-green-text mr-2\"></i> */}\n                </div>,\n                WH: <div style={{textAlign:\"center\"}}>\n                    <i class=\"far fa-laugh-wink fa-3x pink-text mr-2\"></i>\n\n                {/* <i class=\"fas fa-user-astronaut fa-2x green-text mr-2\"></i> */}\n                {/* <i class=\"far fa-circle fa-2x pink-text mr-2\"></i> */}\n                </div>,\n                LA: <div style={{textAlign:\"center\"}}>\n                <i class=\"fas fa-sad-cry fa-3x amber-text mr-2\"></i>\n\n                {/* <i class=\"fas fa-times fa-2x amber-text mr-2\"></i> */}\n                {/* <i class=\"fas fa-robot fa-2x light-green-text mr-2\"></i> */}\n            </div>,\n                LH: <div style={{textAlign:\"center\"}}>\n                    <i class=\"far fa-sad-cry fa-3x pink-text mr-2\"></i>\n\n                {/* <i class=\"fas fa-user-astronaut fa-2x green-text mr-2\"></i> */}\n                {/* <i class=\"far fa-circle fa-2x pink-text mr-2\"></i> */}\n            </div>\n              }\n        }\n    }\n\n    alterBigBoardRow(winner_symbol,winner_status,loser_symbol,loser_status,win_row)\n    {\n        let copy_bigBoard = this.state.bigboard.slice()\n        for(let outer_row = 0; outer_row < 3; outer_row++)\n        {\n            for(let outer_column = 0; outer_column < 3; outer_column++)\n            {\n                for(let inner_row = 0; inner_row < 3; inner_row++)\n                {\n                    for(let inner_column = 0; inner_column < 3; inner_column++)\n                    {\n                        if(outer_row === win_row)\n                        {\n                            copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                        }\n                        else\n                        {\n                            if(copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === winner_symbol)\n                            {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                            }\n                            else if(copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === loser_symbol)\n                            {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = loser_status\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.setState({\n            // ultimateWin : true,\n            bigboard : copy_bigBoard\n        })\n    }\n\n    alterBigBoardColumn(winner_symbol,winner_status,loser_symbol,loser_status,win_column)\n    {\n        let copy_bigBoard = this.state.bigboard.slice()\n\n        for(let outer_row = 0; outer_row < 3; outer_row++)\n        {\n            for(let outer_column = 0; outer_column < 3; outer_column++)\n            {\n                for(let inner_row = 0; inner_row < 3; inner_row++)\n                {\n                    for(let inner_column = 0; inner_column < 3; inner_column++)\n                    {\n                        if(outer_column === win_column)\n                        {\n                            copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                        }\n                        else\n                        {\n                            if(copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === winner_symbol)\n                            {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                            }\n                            else if(copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === loser_symbol)\n                            {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = loser_status\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.setState({\n            // ultimateWin : true,\n            bigboard : copy_bigBoard\n        })\n    }\n\n    alterBigBoardLeftDiagonal(winner_symbol,winner_status,loser_symbol,loser_status)\n    {\n        let copy_bigBoard = this.state.bigboard.slice()\n\n        for(let outer_row = 0; outer_row < 3; outer_row++)\n        {\n            for(let outer_column = 0; outer_column < 3; outer_column++)\n            {\n                for(let inner_row = 0; inner_row < 3; inner_row++)\n                {\n                    for(let inner_column = 0; inner_column < 3; inner_column++)\n                    {\n                        if( (outer_row === 0 && outer_column === 0) || (outer_row === 1 && outer_column === 1) || (outer_row === 2 && outer_column === 2))\n                        {\n                            copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                        }\n                        else\n                        {\n                            if(copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === winner_symbol)\n                            {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                            }\n                            else if(copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === loser_symbol)\n                            {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = loser_status\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.setState({\n            // ultimateWin : true,\n            bigboard : copy_bigBoard\n        })\n    }\n\n    alterBigBoardRightDiagonal(winner_symbol,winner_status,loser_symbol,loser_status)\n    {\n        let copy_bigBoard = this.state.bigboard.slice()\n        for(let outer_row = 0; outer_row < 3; outer_row++)\n        {\n            for(let outer_column = 0; outer_column < 3; outer_column++)\n            {\n                for(let inner_row = 0; inner_row < 3; inner_row++)\n                {\n                    for(let inner_column = 0; inner_column < 3; inner_column++)\n                    {\n                        if( (outer_row === 0 && outer_column === 2) || (outer_row === 1 && outer_column === 1) || (outer_row === 2 && outer_column === 0))\n                        {\n                            copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                        }\n                        else\n                        {\n                            if(copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === winner_symbol)\n                            {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                            }\n                            else if(copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === loser_symbol)\n                            {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = loser_status\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.setState({\n            // ultimateWin : true,\n            bigboard : copy_bigBoard\n        })\n    }\n   \n\n    \n\n\n    check_ultimate_win(copy_board)\n    {\n        // let copy_bigBoard = this.state.bigboard.slice()\n\n        for (let i = 0; i < 3; i++) { //for row\n            if (\n              copy_board[i][0] === copy_board[i][1] &&\n              copy_board[i][0] === copy_board[i][2] &&\n              copy_board[i][1] === copy_board[i][2] &&\n              copy_board[i][0] !== \" \"\n            ) {\n              if (copy_board[i][0] === \"O\") {\n\n                this.alterBigBoardRow(\"O\",\"WH\",\"X\",\"LA\",i)\n\n              } else if (copy_board[i][0] === \"X\") {\n                this.alterBigBoardRow(\"X\",\"WA\",\"O\",\"LH\",i)                \n              }\n              this.setState({\n                ultimateWin: true,\n                ultimateWinBoard : copy_board\n              });\n            }\n          }\n        \n\n          for (let i = 0; i < 3; i++) { // for column\n            if (\n              copy_board[0][i] === copy_board[1][i] &&\n              copy_board[0][i] === copy_board[2][i] &&\n              copy_board[1][i] === copy_board[2][i] &&\n              copy_board[0][i] !== \" \"\n            ) {\n              if (copy_board[0][i] === \"O\") {\n               this.alterBigBoardColumn(\"O\",\"WH\",\"X\",\"LA\",i)\n              } else if (copy_board[0][i] === \"X\") {\n               this.alterBigBoardColumn(\"X\",\"WA\",\"O\",\"LH\",i)\n                \n              }\n              this.setState({\n                ultimateWin: true,\n                ultimateWinBoard : copy_board\n              });\n            }\n          }\n\n          if (\n            copy_board[0][0] === copy_board[1][1] &&\n            copy_board[0][0] === copy_board[2][2] &&\n            copy_board[1][1] === copy_board[2][2] &&\n            copy_board[0][0] !== \" \"\n          ) {\n            if (copy_board[0][0] === \"O\") {\n               this.alterBigBoardLeftDiagonal(\"O\",\"WH\",\"X\",\"LA\")\n            } else if (copy_board[0][0] === \"X\") {\n                this.alterBigBoardLeftDiagonal(\"X\",\"WA\",\"O\",\"LH\")              \n            }\n            this.setState({\n              ultimateWin: true,\n              ultimateWinBoard : copy_board\n            });\n          }\n      \n          if (\n            copy_board[0][2] === copy_board[1][1] &&\n            copy_board[0][2] === copy_board[2][0] &&\n            copy_board[1][1] === copy_board[2][0] &&\n            copy_board[0][2] !== \" \"\n          ) {\n            if (copy_board[0][2] === \"O\") {\n                this.alterBigBoardLeftDiagonal(\"O\",\"WH\",\"X\",\"LA\")                            \n            } else if (copy_board[0][2] === \"X\") {\n                this.alterBigBoardRightDiagonal(\"X\",\"WA\",\"O\",\"LH\")                            \n            }\n            this.setState({\n              ultimateWin: true,\n              ultimateWinBoard : copy_board\n            });\n          }\n    }\n\n    place_partial(bigBoard,outer_row,outer_column,symbol)\n    {\n        // console.log(\"came here\")\n        for(let inner_row = 0; inner_row < 3; inner_row++)\n        {\n            for(let inner_column = 0; inner_column < 3; inner_column++)\n            {\n                bigBoard[outer_row][outer_column][inner_row][inner_column] = symbol\n            }\n        }\n\n        let copyUltimateWinBoard_1 = this.state.ultimateWinBoard.slice()\n        copyUltimateWinBoard_1[outer_row][outer_column] = symbol\n\n        this.setState({\n            bigboard : bigBoard,\n            ultimateWinBoard : copyUltimateWinBoard_1\n        })\n\n        let copyUltimateWinBoard_2 = this.state.ultimateWinBoard.slice()\n        this.check_ultimate_win(copyUltimateWinBoard_2)\n    }\n\n    checkPartialWin(bigBoard)\n    {\n        for(let outer_row = 0; outer_row < 3; outer_row++)\n        {\n            for(let outer_column = 0; outer_column < 3; outer_column++)\n            {\n                for(let i = 0; i < 3; i++)\n                {\n                    if( bigBoard[outer_row][outer_column][i][0] === bigBoard[outer_row][outer_column][i][1] &&\n                        bigBoard[outer_row][outer_column][i][1] === bigBoard[outer_row][outer_column][i][2] &&\n                        bigBoard[outer_row][outer_column][i][0] === bigBoard[outer_row][outer_column][i][2] &&\n                        bigBoard[outer_row][outer_column][i][0] !== \" \"\n                        )\n                    {\n                        if(bigBoard[outer_row][outer_column][i][0] === \"O\")\n                        {\n                            this.place_partial(bigBoard,outer_row,outer_column,\"O\");\n                        }\n                        else if(bigBoard[outer_row][outer_column][i][0] === \"X\")\n                        {\n                            this.place_partial(bigBoard,outer_row,outer_column,\"X\");\n                        }\n                    }\n                }\n            }\n        }\n\n\n        for(let outer_row = 0; outer_row < 3; outer_row++)\n        {\n            for(let outer_column = 0; outer_column < 3; outer_column++)\n            {\n                for(let i = 0; i < 3; i++)\n                {\n                    if( bigBoard[outer_row][outer_column][0][i] === bigBoard[outer_row][outer_column][1][i] &&\n                        bigBoard[outer_row][outer_column][0][i] === bigBoard[outer_row][outer_column][2][i] &&\n                        bigBoard[outer_row][outer_column][1][i] === bigBoard[outer_row][outer_column][2][i] &&\n                        bigBoard[outer_row][outer_column][0][i] !== \" \"\n                        )\n                    {\n                        if(bigBoard[outer_row][outer_column][0][i] === \"O\")\n                        {\n                            this.place_partial(bigBoard,outer_row,outer_column,\"O\");\n                            \n                        }\n                        else if(bigBoard[outer_row][outer_column][0][i] === \"X\")\n                        {\n                            this.place_partial(bigBoard,outer_row,outer_column,\"X\");                            \n                        }\n                    }\n                }\n            }\n        }\n\n\n        for(let outer_row = 0; outer_row < 3; outer_row++)\n        {\n            for(let outer_column = 0; outer_column < 3; outer_column++)\n            {\n                if(bigBoard[outer_row][outer_column][0][0] === bigBoard[outer_row][outer_column][1][1] &&\n                    bigBoard[outer_row][outer_column][0][0] === bigBoard[outer_row][outer_column][2][2] &&\n                    bigBoard[outer_row][outer_column][1][1] === bigBoard[outer_row][outer_column][2][2] &&\n                    bigBoard[outer_row][outer_column][0][0] !== \" \"\n                    )\n                    {\n                        if(bigBoard[outer_row][outer_column][0][0] === \"O\")\n                        {\n                            this.place_partial(bigBoard,outer_row,outer_column,\"O\");                            \n                        }\n                        else if(bigBoard[outer_row][outer_column][0][0] === \"X\")\n                        {\n                            this.place_partial(bigBoard,outer_row,outer_column,\"X\");                                                        \n                        }\n                    }\n            }\n        }\n\n\n\n        for(let outer_row = 0; outer_row < 3; outer_row++)\n        {\n            for(let outer_column = 0; outer_column < 3; outer_column++)\n            {\n                if(bigBoard[outer_row][outer_column][0][2] === bigBoard[outer_row][outer_column][1][1] &&\n                    bigBoard[outer_row][outer_column][0][2] === bigBoard[outer_row][outer_column][2][0] &&\n                    bigBoard[outer_row][outer_column][1][1] === bigBoard[outer_row][outer_column][2][0] &&\n                    bigBoard[outer_row][outer_column][0][2] !== \" \"\n                    )\n                    {\n                        if(bigBoard[outer_row][outer_column][0][2] === \"O\")\n                        {\n                            this.place_partial(bigBoard,outer_row,outer_column,\"O\");                                                        \n                        }\n                        else if(bigBoard[outer_row][outer_column][0][2] === \"X\")\n                        {\n                            this.place_partial(bigBoard,outer_row,outer_column,\"X\");                                                        \n                        }\n                    }\n            }\n        }\n    }\n\n\n\n    checkValidityOfMove(outer_row,outer_column)\n    {\n        if(this.state.ultimateWinBoard[this.state.rowToPlace][this.state.columnToPlace] === \" \")\n        {\n            if(outer_row !== this.state.rowToPlace)\n                return false\n            else if(outer_column !== this.state.columnToPlace)\n                return false\n            else if(outer_row === this.state.rowToPlace && outer_column === this.state.columnToPlace)\n                return true\n        }\n        else\n            return true\n    }\n\n    handleCellClick = (e, outerRow,outerColumn,innerRow,innerColumn) => {\n        if(this.state.startGameValue === true && this.state.ultimateWin === false)\n        {\n            let copy_bigBoard1 = this.state.bigboard.slice()\n            if(copy_bigBoard1[outerRow][outerColumn][innerRow][innerColumn] === \" \")\n            {\n                if(this.state.moveNumber !== 1)\n                {\n                    if(this.checkValidityOfMove(outerRow,outerColumn) === true)\n                    {\n                        // console.log(\"yeah it is truueee\")\n                        // console.log(this.state.ultimateWinBoard)\n                        copy_bigBoard1[outerRow][outerColumn][innerRow][innerColumn] = \"O\"\n\n                        this.setState({\n                            bigboard : copy_bigBoard1\n                        })\n\n                        let copy_bigBoard2 = this.state.bigboard.slice()\n                        this.checkPartialWin(copy_bigBoard2)\n\n\n                        if(this.state.ultimateWin === false)\n                        {\n                            axios.get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn-ultimate\", {\n                                params: {\n                                    board : JSON.stringify(this.state.bigboard),\n                                    checkboard : JSON.stringify(this.state.ultimateWinBoard),\n                                    previous_move : JSON.stringify([outerRow,outerColumn,innerRow,innerColumn])\n                                },\n                            }) //route to be filled according to flask route name\n                            .then((res) => {\n                                console.log(res.data)\n                                let copy_board1 = this.state.bigboard.slice()\n                                copy_board1[res.data[\"agent-move\"][0]][res.data[\"agent-move\"][1]][res.data[\"agent-move\"][2]][res.data[\"agent-move\"][3]] = \"X\"\n                                if(this.state.startGameButton === \"Reset Game\")\n                                {\n                                    this.setState({\n                                        bigboard : copy_board1,\n                                        moveNumber : this.moveNumber + 1,\n                                        rowToPlace : res.data[\"agent-move\"][2],\n                                        columnToPlace : res.data[\"agent-move\"][3]\n                                    })\n                                    \n                                    // console.log(\"jhbejhedh\")\n                                    let copy_bigBoard2 = this.state.bigboard.slice()\n                                    this.checkPartialWin(copy_bigBoard2)\n                                }     \n                            })\n                            .catch((err) => {\n                            console.log(err);\n                            });\n                        }\n                    }\n                    else\n                    {\n                        console.log(\"try again\")\n                    }\n                }\n                else\n                {\n\n                    let copy_bigBoard1 = this.state.bigboard.slice()\n\n                    copy_bigBoard1[outerRow][outerColumn][innerRow][innerColumn] = \"O\"\n\n                        this.setState({\n                            bigboard : copy_bigBoard1\n                        })\n                    axios.get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn-ultimate\", {\n                            params: {\n                                board : JSON.stringify(this.state.bigboard),\n                                checkboard : JSON.stringify(this.state.ultimateWinBoard),\n                                previous_move : JSON.stringify([outerRow,outerColumn,innerRow,innerColumn])\n                            },\n                        }) //route to be filled according to flask route name\n                        .then((res) => {\n                            console.log(res.data)\n                            let copy_board1 = this.state.bigboard.slice()\n                            \n                            copy_board1[res.data[\"agent-move\"][0]][res.data[\"agent-move\"][1]][res.data[\"agent-move\"][2]][res.data[\"agent-move\"][3]] = \"X\"\n                        if(this.state.startGameButton === \"Reset Game\")\n                        {\n                            this.setState({\n                                bigboard : copy_board1,\n                                moveNumber : this.moveNumber + 1,\n                                rowToPlace : res.data[\"agent-move\"][2],\n                                columnToPlace : res.data[\"agent-move\"][3]\n                            })\n                            let copy_bigBoard2 = this.state.bigboard.slice()\n                            this.checkPartialWin(copy_bigBoard2)\n                        }\n                        })\n                        .catch((err) => {\n                        console.log(err);\n                        });\n                }\n            }\n        }\n    }\n\n    handleStartGame = (e,startGame) => {\n    console.log(startGame)\n    \n    if (startGame === \"Start Game\")\n    {\n        this.setState({\n          startGameButton: \"Reset Game\",\n          startGameValue : true\n        });\n    }\n    else if (startGame === \"Reset Game\")\n    {\n        let copy_board = this.state.bigboard;\n\n        for(let outer_row = 0; outer_row < 3; outer_row++)\n        {\n            for(let outer_column = 0; outer_column < 3; outer_column++)\n            {\n                for(let inner_row = 0; inner_row < 3; inner_row++)\n                {\n                    for(let inner_column = 0; inner_column < 3; inner_column++)\n                    {\n                        copy_board[outer_row][outer_column][inner_row][inner_column] = \" \"\n                    }\n                }\n            }\n        }\n\n        this.setState({\n            bigboard: copy_board,\n            gameBeginner: \" \",\n            startGameValue : false,\n            startGameButton: \"Start Game\",\n            startGameValue: false,\n            ultimateWin : false,\n            rowToPlace : \" \",\n            columnToPlace : \" \",\n            moveNumber : 1,\n            ultimateWinBoard: [\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n              ]\n        });\n    }\n\n    if(this.state.gameBeginner === \"AGENT\")\n    {\n        console.log(\"Agent beginner\")\n        axios.get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn-ultimate\", {\n            params: {\n                board : JSON.stringify(this.state.bigboard),\n                checkboard : JSON.stringify(this.state.ultimateWinBoard),\n                previous_move : JSON.stringify([-1,-1,-1,-1])\n            },\n        }) //route to be filled according to flask route name\n        .then((res) => {\n\n            let copy_board1 = this.state.bigboard.slice()\n            copy_board1[res.data[\"agent-move\"][0]][res.data[\"agent-move\"][1]][res.data[\"agent-move\"][2]][res.data[\"agent-move\"][3]] = \"X\"\n\n        if(this.state.startGameButton === \"Reset Game\")\n        {\n            this.setState({\n                bigboard : copy_board1,\n                rowToPlace : res.data[\"agent-move\"][2],\n                columnToPlace : res.data[\"agent-move\"][3],\n                moveNumber : this.moveNumber + 1\n            })\n            let copy_bigBoard2 = this.state.bigboard.slice()\n            this.checkPartialWin(copy_bigBoard2)\n        }\n                \n        })\n        .catch((err) => {\n        console.log(err);\n        });\n    }\n}\n\nhandleStartHuman = (e) => {\n    console.log(\"Human begins the game!\");\n    this.setState({\n      gameBeginner: \"HUMAN\",\n    });\n  };\n\n  handleStartAgent = (e) => {\n    console.log(\"Agent begins the game!\");\n    this.setState({\n      gameBeginner: \"AGENT\",\n    });\n  };\n\n\n    render () {\n        return (\n            <div style={{marginTop:\"2%\"}}>\n            <div style={{textAlign:\"center\"}}>\n            <h1 style={heading}>RED NINJA TIC TAC TOE</h1>\n            </div>\n            <Container>\n                <Container fluid='true'>\n                {\n                    this.state.bigboard.map((row, outerRow)=>(\n                        <Row>\n                            {\n                                row.map((column, outerColumn)=> (\n\n                                    <Col md style={cellStyle1}\n                                    >\n                                        {\n                                            this.state.bigboard.map((inner_row,innerRow)=>(\n                                            <Row>\n                                            {\n                                                inner_row.map((inner_column,innerColumn)=> (\n                                                    <Col md style={cellStyle2}\n                                                    onClick={(e) => this.handleCellClick(e,outerRow,outerColumn,innerRow,innerColumn)}>\n                                                {\n                                                    <div style={{textAlign:\"center\"}}>\n                                                        {this.state.symbol[this.state.bigboard[outerRow][outerColumn][innerRow][innerColumn]]}\n                                                </div>\n                                                }\n                                                </Col>\n                                            )) \n                                            }\n                                        </Row>\n                                            ))\n                                        }\n                                    </Col>\n                                ))\n                            }\n                        </Row>\n                    ))\n                }\n                </Container>\n            </Container>\n\n                <div style={{}}>\n                        <Button\n                            variant=\"info\"\n                            size=\"lg\"\n                            style={{}}\n                            onClick={(e) => this.handleStartGame(e, this.state.startGameButton)}\n                        >\n                            {this.state.startGameButton}\n                        </Button>{\" \"}\n            </div>\n\n            <Button variant=\"default\" onClick={(e) => this.handleStartHuman(e)}>\n                Beginner_Human\n            </Button>\n\n\n            <Button variant=\"default\" onClick={(e) => this.handleStartAgent(e)}>\n                Beginner_Agent\n            </Button>\n</div>\n        )\n    }    \n}\n\nconst cellStyle1 = {\n    backgroundColor: 'black',\n    textAlign: 'center',\n    border : \"1px solid\",\n    width:\"10%\",\n    height : 250,\n    padding:\"3%\"\n  }\n\n  const cellStyle2 = {\n    backgroundColor: 'black',\n    textAlign: 'center',\n    border : \"1px solid\",\n    width:\"5%\",\n    height : 70,\n    padding:\"1%\"\n  }\n\n  const cellStyle3 = {\n    backgroundColor: 'pink',\n    textAlign: 'center',\n    border : \"1px solid\",\n    width:\"10%\",\n    height : 250,\n    padding:\"3%\"\n  }\n  //   border-collapse: \"separate\"\n  // }\n  const heading = {\n      display:\"inline-block\",\n      textAlign: 'center',\n      width: '80%',\n      lineHeight: 1.5\n  }\n\n\n//   <i class=\"far fa-grin\"></i>\n{/* <i class=\"fas fa-grin\"></i> */}\n\n{/* <i class=\"far fa-laugh-wink\"></i> */}\n{/* <i class=\"fas fa-laugh-wink\"></i> */}\n\n{/* <i class=\"far fa-sad-cry\"></i> */}\n{/* <i class=\"fas fa-sad-cry\"></i> */}\n","import React, { Component } from 'react'\n// import { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\n// import {MDBRow, MDBCard, MDBCardBody,MDBCardTitle, MDBCardText, MDBCol, MDBIcon} from \"mdbreact\";\n// import { Link } from 'react-router-dom'\nimport { Button, Container, Col, Row } from 'react-bootstrap'\n// import axios from 'axios';\nimport Board from './Board.js'\nimport BigBoard from './BigBoard.js'\n// import Sky from 'react-sky';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n// import { render } from 'react-dom';\n\nexport default class GameStarter extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            show_3x3_BoardComponent : false,\n            show_9x9_BoardComponent : false,\n            showGameStarterComponent : true\n        }\n    }\n\n    render () \n    {\n        return (\n          <div style = {{}}>\n\n          {/* <section style = {sectionStyle}></section> */}\n                <Button variant=\"info\" size=\"lg\" \n                onClick = {() => {\n                  this.setState ({\n                        show_3x3_BoardComponent : true,\n                        showGameStarterComponent : false\n                  });\n                }}> 3*3 TIC-TAC-TOE\n                </Button>\n                <Button variant=\"info\" size=\"lg\" \n                onClick = {() => {\n                  this.setState ({\n                        show_9x9_BoardComponent : true,\n                        showGameStarterComponent : false\n                  });\n                }}> 9*9 TIC-TAC-TOE\n                </Button>\n                {this.state.show_3x3_BoardComponent && <Board/>}\n                {this.state.show_9x9_BoardComponent && <BigBoard/>}\n                </div>\n        )\n    }\n}\n\n\n// var sectionStyle = {\n//   width: \"100%\",\n//   height: \"400px\",\n//   backgroundImage: \"url(\" + \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.vectorstock.com%2Froyalty-free-vector%2Fastronaut-standing-at-mars-vector-19656662&psig=AOvVaw2xG1bjZqrv24uSLeNYwXMg&ust=1594645072145000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCIjYl5Dix-oCFQAAAAAdAAAAABAI\" + \")\"\n// };\n{/* <MDBIcon icon=\"space-shuttle\" /> */}\n{/* <MDBIcon icon=\"rocket\" /> */}","// import logo from './logo.svg';\nimport React, { Component } from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Board from './components/Board'\nimport GameStarter from './components/GameStarter'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import axios from 'axios';\n\n\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n          <Switch>\n            <Route exact path='/' component={GameStarter} />\n          </Switch>\n        </Router>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}