{"version":3,"sources":["static/assets/about/level2.gif","static/assets/about/l4-light.gif","static/assets/about/ultimate-dark-tie.gif","static/assets/about/extreme-main.gif","static/assets/about/responsive-themes.gif","static/assets/about/extreme-guide.gif","static/assets/about/undo.gif","static/assets/about/scores.png","static/assets/about/error.gif","static/assets/about/abp.gif","static/assets/three2.gif","static/assets/win.gif","static/assets/sad.gif","static/assets/tie.gif","components/threeBoard.js","components/nineBoard.js","components/Landing.js","components/Error.js","components/Overview.js","components/Rules.js","components/Message.js","components/threeConfiguration.js","components/gameResults.js","components/threeGame.js","components/nineConfiguration.js","components/nineGame.js","components/Scores.js","App.js","serviceWorker.js","index.js","static/css/result.module.css","static/css/Rules.module.css","static/css/scores.module.css","static/css/message.module.css","static/css/board.module.css","static/css/Landing.module.css","static/css/error.module.css","static/css/Overview.module.css","static/assets/nine-final3.gif","static/css/Config-mallika.module.css","static/assets/sounds/start-game.mp3","static/assets/sounds/place-icon.mp3","static/assets/sounds/lets-play.mp3"],"names":["module","exports","blinker","Landing","props","state","className","styles","landingBody","content","heading","subheading","to","Button","variant","size","Component","Error","button","Overview","overviewStyles","Container","contentContainer","text","Row","Col","sm","md","lg","class","gifs","src","require","style","textAlign","width","margin","href","color","rulesStyles","Message","useState","show","setShow","messageForError","aria-live","aria-atomic","box1","position","top","left","Toast","Header","closeButton","Body","bodytext1","messageForHint","box","right","onClose","delay","autohide","bodytext","row_to_place","column_to_place","start_game_sound","place_icon_sound","ThreeBoard","sleep","milliseconds","Promise","resolve","setTimeout","handleCellClick","e","cell","startGameValue","win","turn","copy_board","board","slice","Math","floor","playAudio","undoStack","push","symbol_stack","setState","human_move_number","copy_board2","check_win","then","axios","get","params","gameBeginner","JSON","stringify","depth","res","data","r","c","startGameButton","copy_board3","update_Win_Three","winner","catch","err","console","log","handleStartGame","startGame","value_beginner","topHeading","highlightButton","stopBlinker","whoPlaysFirstDialog","startBlinker","handleUndoFeature","index","copy_undoStack","copy_symbol_stack","buttonsToErase","length","i","pop","symbol","X","centerDiv","iconThree","O","iconAgent","WA","WH","darkMode","this","setInterval","newHighlight","clearInterval","audio_element","document","getElementsByClassName","play","tie_flag","j","setScores","gameWinner","status","score","game","history","localStorage","getItem","a","parse","setItem","setWinner","checkTie","classNames","whiteBg","maxWidth","lightHeading","title","fluid","map","row","cellThree","greyCell","onClick","boardInfo","padding","xs","center","aria-hidden","cursor","changeMode","disabled","undo","lightUndo","ceil","play_game_sound","ThreeConfiguration","beginner","configStyles","wrapper","mainDiv","containerBody","display","marginTop","marginBottom","startWrapper","startContent","iconStyles","iconSelect","handleStartAgent_Three","playerName","handleStartHuman_Three","selectedButton","handleDepth_Three","update_Three","GameResults","marginLeft","marginRight","gif","type","infinite","route","update_Nine","ThreeGame","showThreeConfigurationComponent","showThreeGameComponent","showThreeWinComponent","updateStateOfComponents_Three","bind","updateStateForWinComponent","selected_depth","gameRoute","message","NineBoard","outerRow","outerColumn","innerRow","innerColumn","ultimateWin","copy_bigBoard1","bigboard","checkValidityOfMove","copy_bigBoard2","checkPartialWin","checkboard","ultimateWinBoard","previous_move","copy_board1","rowToPlace","columnToPlace","agentOuterRow","agentOuterColumn","agentInnerRow","agentInnerColumn","hintPlacer","update_Win_Nine","resetBoard","outer_row","outer_column","inner_row","inner_column","show_9x9_BoardComponent","iconNine","LA","LH","bigBoard","ultimateBoard","winner_symbol","winner_status","loser_symbol","loser_status","win_row","copy_bigBoard","win_column","final_tie_flag","alterBigBoardRow","alterBigBoardColumn","alterBigBoardLeftDiagonal","alterBigBoardRightDiagonal","checkFinalTie","copyUltimateWinBoard_1","copyUltimateWinBoard_2","check_ultimate_win","place_partial","nineHeading","nineSpinner","column","cellStyle1","cellStyle3","cellStyle2","cellNine","highlighted","nineBoardInfo","fontSize","window","open","backgroundColor","border","flexBasis","flexGrow","minWidth","height","NineConfiguration","showWinComponent","showConfigurationComponent","showGameConfiguration","handleStartHuman_Nine","handleStartAgent_Nine","ruleimg","rulestext","showNineConfigurationComponent","showNineGameComponent","showNineWinComponent","updateStateOfComponents_Nine","Scores","scores","oldScores","clearScores","Table","striped","bordered","hover","table","topics","NavigationBar","listener","addEventListener","scrollingElement","scrollTop","removeEventListener","Navbar","expand","navstyles","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","App","exact","path","component","NineGame","Rules","overflow","zIndex","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b0cc9b21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/level2.eb715576.gif\";","module.exports = __webpack_public_path__ + \"static/media/l4-light.92122851.gif\";","module.exports = __webpack_public_path__ + \"static/media/ultimate-dark-tie.dec185c7.gif\";","module.exports = __webpack_public_path__ + \"static/media/extreme-main.3b42a7f0.gif\";","module.exports = __webpack_public_path__ + \"static/media/responsive-themes.618a73f9.gif\";","module.exports = __webpack_public_path__ + \"static/media/extreme-guide.c8ab34f8.gif\";","module.exports = __webpack_public_path__ + \"static/media/undo.a501d995.gif\";","module.exports = __webpack_public_path__ + \"static/media/scores.7e71807f.png\";","module.exports = __webpack_public_path__ + \"static/media/error.0a0c2a59.gif\";","module.exports = __webpack_public_path__ + \"static/media/abp.b1edd6cf.gif\";","module.exports = __webpack_public_path__ + \"static/media/three2.dd19d2e4.gif\";","module.exports = __webpack_public_path__ + \"static/media/win.7dddbc6c.gif\";","module.exports = __webpack_public_path__ + \"static/media/sad.28b9b575.gif\";","module.exports = __webpack_public_path__ + \"static/media/tie.96b51d3b.gif\";","import React, { Component} from \"react\";\nimport styles from \"../static/css/board.module.css\";\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nconst start_game_sound = require(\"../static/assets/sounds/start-game.mp3\");\nconst place_icon_sound = require(\"../static/assets/sounds/place-icon.mp3\");\nlet blinker;\n\nexport default class ThreeBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [\n        [\" \", \" \", \" \"],\n        [\" \", \" \", \" \"],\n        [\" \", \" \", \" \"],\n      ],\n      human_move_number: 0,\n      startGameValue: false,\n      whoPlaysFirstDialog: false,\n      startGameButton: \"Start Game\",\n      turn: this.props.gameBeginner,\n      win: false,\n      winner: \" \",\n      undoStack: [],\n      symbol_stack: [],\n      value_beginner: \" \",\n      symbol: {\n        X: (\n          <div style={{ textAlign: \"center\" }} className={styles.centerDiv}>\n            <i className={\"fas fa-user-astronaut \" + styles.iconThree}></i>\n          </div>\n        ),\n        O: (\n          <div style={{ textAlign: \"center\" }}>\n            <i\n              className={\n                \"fas fa-robot \" + styles.iconThree + \" \" + styles.iconAgent\n              }\n            ></i>\n          </div>\n        ),\n        WA: (\n          <div style={{ textAlign: \"center\" }}>\n            <i\n              className={\n                \"fas fa-robot fa-spin \" +\n                styles.iconThree +\n                \" \" +\n                styles.iconAgent\n              }\n            ></i>\n          </div>\n        ),\n        WH: (\n          <div style={{ textAlign: \"center\" }}>\n            <i\n              className={\"fas fa-user-astronaut fa-spin \" + styles.iconThree}\n            ></i>\n          </div>\n        ),\n      },\n      darkMode: true,\n      heading: \"RED NINJA TIC TAC TOE\",\n      highlightButton: true,\n    };\n  }\n\n  componentDidMount() {\n    this.startBlinker();\n  }\n\n  startBlinker() {\n    blinker = setInterval(() => {\n      let newHighlight = !this.state.highlightButton;\n      if (!this.state.startGameValue)\n        this.setState({ highlightButton: newHighlight });\n    }, 400);\n  }\n\n  stopBlinker() { // to stop the start button blinker when clicked\n    clearInterval(blinker);\n  }\n\n  playAudio(audio_element) { //function for the audio effect of button clicks\n    const audioEl = document.getElementsByClassName(audio_element)[0];\n    audioEl.play();\n  }\n\n  checkTie(copy_board) { //To check if there happened a tie in the game\n    let tie_flag = true;\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (copy_board[i][j] === \" \") {\n          tie_flag = false;\n        }\n      }\n    }\n    if (tie_flag === true) {\n      this.setState({\n        win: true,\n        winner: \"TIE\",\n        heading: \"IT'S A TIE!\",\n      });\n      this.setScores(\"TIE\");\n    }\n  }\n\n  setScores(gameWinner) { //setting the scores of the human player\n    let status = \"WIN\";\n    if (gameWinner === \"AGENT\") status = \"LOST\";\n    else if (gameWinner === \"TIE\") status = \"TIE\";\n    let score = { game: \"3*3\", depth: this.props.depth, winner: status };\n    let history = localStorage.getItem(\"scores\");\n    let a = [];\n    if (history) a = JSON.parse(history) || [];\n\n    a.push(score);\n    localStorage.setItem(\"scores\", JSON.stringify(a));\n  }\n\n  setWinner(gameWinner) { //to set the winner of the game\n    let topHeading = \"HOUSTON, YOU DID IT!  🎉\";\n    if (gameWinner === \"AGENT\") topHeading = \"ROBOT'S WIN 🙁\";\n\n    this.setState({\n      winner: gameWinner,\n      heading: topHeading,\n    });\n\n    this.setScores(gameWinner);\n  }\n\n  changeMode(darkMode) { //to toggle the dark and night modes in the game\n    this.setState({ darkMode: !darkMode });\n  }\n\n  check_win(copy_board) { //to check if there was a win of a player\n    for (let i = 0; i < 3; i++) { // for each row\n      if (\n        copy_board[i][0] === copy_board[i][1] &&\n        copy_board[i][0] === copy_board[i][2] &&\n        copy_board[i][1] === copy_board[i][2] &&\n        copy_board[i][0] !== \" \"\n      ) {\n        if (copy_board[i][0] === \"O\") {\n          copy_board[i][0] = \"WA\";\n          copy_board[i][1] = \"WA\";\n          copy_board[i][2] = \"WA\";\n\n          this.setWinner(\"AGENT\");\n        } else if (copy_board[i][0] === \"X\") {\n          copy_board[i][0] = \"WH\";\n          copy_board[i][1] = \"WH\";\n          copy_board[i][2] = \"WH\";\n\n          this.setWinner(\"HUMAN\");\n        }\n        this.setState({\n          win: true,\n        });\n      }\n    }\n    for (let i = 0; i < 3; i++) { //for each column\n      if (\n        copy_board[0][i] === copy_board[1][i] &&\n        copy_board[0][i] === copy_board[2][i] &&\n        copy_board[1][i] === copy_board[2][i] &&\n        copy_board[0][i] !== \" \"\n      ) {\n        if (copy_board[0][i] === \"O\") {\n          copy_board[0][i] = \"WA\";\n          copy_board[1][i] = \"WA\";\n          copy_board[2][i] = \"WA\";\n\n          this.setWinner(\"AGENT\");\n        } else if (copy_board[0][i] === \"X\") {\n          copy_board[0][i] = \"WH\";\n          copy_board[1][i] = \"WH\";\n          copy_board[2][i] = \"WH\";\n\n          this.setWinner(\"HUMAN\");\n        }\n        this.setState({\n          win: true,\n        });\n      }\n    }\n\n    if ( // for left diagonal\n      copy_board[0][0] === copy_board[1][1] &&\n      copy_board[0][0] === copy_board[2][2] &&\n      copy_board[1][1] === copy_board[2][2] &&\n      copy_board[0][0] !== \" \"\n    ) {\n      if (copy_board[0][0] === \"O\") {\n        copy_board[0][0] = \"WA\";\n        copy_board[1][1] = \"WA\";\n        copy_board[2][2] = \"WA\";\n\n        this.setWinner(\"AGENT\");\n      } else if (copy_board[0][0] === \"X\") {\n        copy_board[0][0] = \"WH\";\n        copy_board[1][1] = \"WH\";\n        copy_board[2][2] = \"WH\";\n\n        this.setWinner(\"HUMAN\");\n      }\n      this.setState({\n        win: true,\n      });\n    }\n\n    if ( //for right daigonal\n      copy_board[0][2] === copy_board[1][1] &&\n      copy_board[0][2] === copy_board[2][0] &&\n      copy_board[1][1] === copy_board[2][0] &&\n      copy_board[0][2] !== \" \"\n    ) {\n      if (copy_board[0][2] === \"O\") {\n        copy_board[0][2] = \"WA\";\n        copy_board[1][1] = \"WA\";\n        copy_board[2][0] = \"WA\";\n\n        this.setWinner(\"AGENT\");\n      } else if (copy_board[0][2] === \"X\") {\n        copy_board[0][2] = \"WH\";\n        copy_board[1][1] = \"WH\";\n        copy_board[2][0] = \"WH\";\n\n        this.setWinner(\"HUMAN\");\n      }\n      this.setState({\n        win: true,\n      });\n    }\n\n    if (this.state.win === false) {\n      this.checkTie(copy_board);\n    }\n  }\n\n  sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  handleCellClick = (e, cell) => { // to place the icons of human and agent\n    if (\n      this.state.startGameValue &&\n      this.state.win === false &&\n      this.state.turn === \"HUMAN\"\n    ) {\n      let copy_board = this.state.board.slice();\n      if (copy_board[Math.floor(cell / 3)][cell % 3] === \" \") {\n        this.playAudio(\"audio-element-icon\");\n        copy_board[Math.floor(cell / 3)][cell % 3] = \"X\";\n\n        this.state.undoStack.push(cell);\n        this.state.symbol_stack.push(\"H\");\n\n        this.setState({\n          board: copy_board,\n          turn: \"AGENT\",\n          human_move_number: this.state.human_move_number + 1,\n          heading: \"AGENT'S TURN\",\n        });\n\n        let copy_board2 = this.state.board.slice();\n        this.check_win(copy_board2);\n\n        this.sleep(1).then(() => {\n          if (this.state.win === false) {\n            axios\n              .get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn\", { //axios request with appropriate data of human's move\n                params: {\n                  gameBeginner: this.props.gameBeginner,\n                  board: JSON.stringify(this.state.board),\n                  depth: JSON.stringify(this.props.depth),\n                },\n              })\n              .then((res) => {\n                let copy_board = this.state.board.slice();\n\n                copy_board[res.data.r][res.data.c] = \"O\"; \n                this.state.undoStack.push(3 * res.data.r + res.data.c);\n\n                this.state.symbol_stack.push(\"A\");\n\n                this.sleep(2).then(() => {\n                  if (this.state.startGameButton === \"Reset Game\") {\n                    this.setState({\n                      board: copy_board,\n                      turn: \"HUMAN\",\n                      heading: \"YOUR TURN\",\n                    });\n                    let copy_board3 = this.state.board.slice();\n                    this.check_win(copy_board3);\n\n                    if (this.state.win === true) {\n                      this.sleep(1).then(() => {\n                        this.props.update_Win_Three(\"three\", this.state.winner);\n                      });\n                    }\n                  } else {\n                    this.setState({\n                      board: [\n                        [\" \", \" \", \" \"],\n                        [\" \", \" \", \" \"],\n                        [\" \", \" \", \" \"],\n                      ],\n                    });\n                  }\n                });\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n          } else {\n            this.sleep(2).then(() => {\n              this.props.update_Win_Three(\"three\", this.state.winner);\n            });\n          }\n        });\n      }\n    }\n  };\n\n  handleStartGame = (e, startGame) => { // to start and reset the game\n    this.playAudio(\"audio-element-start\");\n    if (this.props.gameBeginner === \"AGENT\") {\n      this.setState({\n        value_beginner: 0,\n      });\n    } else {\n      this.setState({\n        value_beginner: 1,\n      });\n    }\n\n    if (startGame === \"Start Game\") {\n      let topHeading = \"YOUR TURN\";\n      if (this.props.gameBeginner === \"AGENT\") topHeading = \"AGENT'S TURN\";\n\n      this.setState({\n        board: [\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n        ],\n        startGameButton: \"Reset Game\",\n        startGameValue: true,\n        heading: topHeading,\n        highlightButton: false,\n      });\n      this.stopBlinker();\n\n      if (this.props.gameBeginner === \"AGENT\") {\n        axios\n          .get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn\", {\n            params: {\n              gameBeginner: this.props.gameBeginner,\n              board: JSON.stringify(this.state.board),\n              depth: JSON.stringify(this.props.depth),\n            },\n          }) \n          .then((res) => {\n            let copy_board = this.state.board.slice();\n\n            copy_board[res.data.r][res.data.c] = \"O\";\n            this.state.undoStack.push(3 * res.data.r + res.data.c);\n            this.state.symbol_stack.push(\"A\");\n            if (this.state.startGameButton === \"Reset Game\") {\n              this.setState({\n                board: copy_board,\n                turn: \"HUMAN\",\n                heading: \"YOUR TURN\",\n              });\n            } else {\n              this.setState({\n                board: [\n                  [\" \", \" \", \" \"],\n                  [\" \", \" \", \" \"],\n                  [\" \", \" \", \" \"],\n                ],\n              });\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    } else if (startGame === \"Reset Game\" && !this.state.win) {\n      this.setState({\n        board: [\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n        ],\n        startGameValue: false,\n        whoPlaysFirstDialog: false,\n        startGameButton: \"Start Game\",\n        win: false,\n        winner: \" \",\n        depth: this.props.depth,\n        undoStack: [],\n        symbol_stack: [],\n        turn: this.props.gameBeginner,\n      });\n\n      this.startBlinker();\n\n      if (this.props.gameBeginner === \"AGENT\") {\n        this.setState({\n          value_beginner: 0,\n        });\n      } else {\n        this.setState({\n          value_beginner: 1,\n        });\n      }\n    }\n  };\n\n  handleUndoFeature = (e, index, cell) => { // to undo the moves of the human player\n    let copy_board = this.state.board.slice();\n    let copy_undoStack = this.state.undoStack.slice();\n    let copy_symbol_stack = this.state.symbol_stack.slice();\n\n    let totalOfUndoButtons = copy_undoStack.length;\n    let buttonsToErase = totalOfUndoButtons - (index + 1);\n\n    for (let i = 0; i <= buttonsToErase; i++) {\n      copy_board[Math.floor(copy_undoStack[copy_undoStack.length - 1] / 3)][\n        copy_undoStack[copy_undoStack.length - 1] % 3\n      ] = \" \";\n      copy_undoStack.pop();\n    }\n\n    for (let i = 0; i <= buttonsToErase; i++) {\n      copy_symbol_stack.pop();\n    }\n\n    this.setState({\n      board: copy_board,\n      undoStack: copy_undoStack,\n      symbol_stack: copy_symbol_stack,\n      turn: \"HUMAN\",\n      heading: \"YOUR TURN\",\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div\n          className={classNames(styles.landingBody, {\n            [styles.whiteBg]: !this.state.darkMode,\n          })}\n        >\n          <div style={{ margin: \"auto\", width: \"600px\", maxWidth: \"90%\" }}>\n            <Container\n              className={classNames(styles.heading, styles.board, {\n                [styles.lightHeading]: !this.state.darkMode,\n              })}\n            >\n              <Row>\n                <Col>\n                  {\" \"}\n                  <h1 className={styles.title}>{this.state.heading}</h1>\n                </Col>\n              </Row>\n            </Container>\n\n            <Container className={styles.board}>\n              <Container fluid=\"true\">\n                {this.state.board.map((row, i) => (\n                  <Row>\n                    {row.map((cell, j) => (\n                      <Col\n                        md\n                        className={classNames(styles.cellThree, {\n                          [styles.greyCell]: !this.state.darkMode,\n                        })}\n                        onClick={(e) => this.handleCellClick(e, 3 * i + j)}\n                      >\n                        {this.state.symbol[this.state.board[i][j]]}\n                      </Col>\n                    ))}\n                  </Row>\n                ))}\n              </Container>\n            </Container>\n\n            <Container\n              className={classNames(styles.boardInfo, styles.board, {\n                [styles.lightHeading]: !this.state.darkMode,\n              })}\n            >\n              <Row style={{ padding: \"1%\" }}>\n                <Col xs={4} className={styles.center}>\n                  Level: {this.props.depth === -1 ? 5 : this.props.depth}\n                </Col>\n                <Col className={styles.center}>\n                  <i class=\"fa fa-sun\" aria-hidden=\"true\"></i>\n                </Col>\n                <Col className={styles.center}>\n                  <span>\n                    {this.state.darkMode ? (\n                      <i\n                        class=\"fa fa-2x fa-toggle-on\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => this.changeMode(this.state.darkMode)}\n                        aria-hidden=\"true\"\n                      ></i>\n                    ) : (\n                      <i\n                        class=\"fa fa-2x fa-toggle-off\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => this.changeMode(this.state.darkMode)}\n                        aria-hidden=\"true\"\n                      ></i>\n                    )}\n                  </span>\n                </Col>\n                <Col className={styles.center}>\n                  <i class=\"fa fa-moon\" aria-hidden=\"true\"></i>\n                </Col>\n                <Col xs={4}>\n                  <Button\n                    variant=\"dark\"\n                    className={classNames(styles.button, {\n                      [styles.lightHeading]: !this.state.darkMode,\n                      [styles.highlightButton]: this.state.highlightButton,\n                    })}\n                    onClick={(e) =>\n                      this.handleStartGame(e, this.state.startGameButton)\n                    }\n                    disabled={this.state.win}\n                  >\n                    {this.state.startGameButton}\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n            {this.state.win === false ? (\n              <Container\n                fluid=\"true\"\n                className={classNames(styles.undo, {\n                  [styles.lightUndo]: !this.state.darkMode,\n                })}\n              >\n                {this.state.symbol_stack.length > 1 ||\n                this.state.symbol_stack[0] === \"H\"\n                  ? \"Reverse to \"\n                  : \"\"}\n                {this.state.symbol_stack.map((cell, i) =>\n                  this.state.symbol_stack[i] === \"H\" ? (\n                    <Button\n                      variant={this.state.darkMode ? \"dark\" : \"light\"}\n                      onClick={(e) => this.handleUndoFeature(e, i, cell)}\n                    >\n                      {Math.ceil((i + 1) / 2) +\n                        ((i + 1) % 2) -\n                        this.state.value_beginner}\n                    </Button>\n                  ) : (\n                    <></>\n                  )\n                )}\n              </Container>\n            ) : (\n              \" \"\n            )}\n\n            <audio className=\"audio-element-start\">\n              <source src={start_game_sound}></source>\n            </audio>\n\n            <audio className=\"audio-element-icon\">\n              <source src={place_icon_sound}></source>\n            </audio>\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst heading = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: \"80%\",\n  lineHeight: 1.5,\n};\n","import React, { Component} from \"react\";\nimport styles from \"../static/css/board.module.css\";\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport classNames from \"classnames\";\nimport Message from \"./Message.js\";\n\nconst start_game_sound = require(\"../static/assets/sounds/start-game.mp3\");\n\nconst place_icon_sound = require(\"../static/assets/sounds/place-icon.mp3\");\n\nlet blinker;\nlet humanTurn = \"YOUR TURN\";\nlet agentTurn = \"AGENT'S TURN\";\nlet winMessage = \"YOU WON! 🎉\";\nlet loseMessage = \"YOU LOST 🙁\";\nlet drawMessage = \"IT'S A TIE!\";\n\nexport default class NineBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show_9x9_BoardComponent: this.props.show_9x9_BoardComponent,\n      startGameButton: \"Start Game\",\n      turn: this.props.gameBeginner,\n      startGameValue: false,\n      ultimateWin: false,\n      winner: \" \",\n      messageForHint: \" \",\n      messageForError: false,\n      rowToPlace: \" \",\n      columnToPlace: \" \",\n      agentOuterRow: \" \",\n      agentOuterColumn: \" \",\n      agentInnerRow: \" \",\n      agentInnerColumn: \" \",\n      ultimateWinBoard: [\n        [\" \", \" \", \" \"],\n        [\" \", \" \", \" \"],\n        [\" \", \" \", \" \"],\n      ],\n      bigboard: [\n        [\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n        ],\n\n        [\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n        ],\n\n        [\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n        ],\n      ],\n\n      symbol: {\n        X: (\n          <div style={{ textAlign: \"center\" }}>\n            <i className={\"fas fa-times amber-text \" + styles.iconNine}></i>\n\n          </div>\n        ),\n        O: (\n          <div style={{ textAlign: \"center\" }}>\n            <i className={\"far fa-circle pink-text \" + styles.iconNine}></i>\n\n          </div>\n        ),\n        WA: (\n          <div style={{ textAlign: \"center\" }}>\n            <i\n              className={\"fas fa-laugh-wink amber-text \" + styles.iconNine}\n            ></i>\n\n          </div>\n        ),\n        WH: (\n          <div style={{ textAlign: \"center\" }}>\n            <i className={\"far fa-laugh-wink pink-text \" + styles.iconNine}></i>\n\n          </div>\n        ),\n        LA: (\n          <div style={{ textAlign: \"center\" }}>\n            <i className={\"fas fa-sad-cry amber-text \" + styles.iconNine}></i>\n\n          </div>\n        ),\n        LH: (\n          <div style={{ textAlign: \"center\" }}>\n            <i className={\"far fa-sad-cry pink-text \" + styles.iconNine}></i>\n\n          </div>\n        ),\n      },\n      darkMode: true,\n      heading: \"RED NINJA TIC TAC TOE\",\n      highlightButton: false,\n    };\n  }\n\n  componentDidMount() {\n    this.startBlinker();\n  }\n\n  playAudio(audio_element) { //for the sound effect for button clicks\n    const audioEl = document.getElementsByClassName(audio_element)[0];\n    audioEl.play();\n  }\n\n  startBlinker() { //start the start button blinker\n    blinker = setInterval(() => {\n      let newHighlight = !this.state.highlightButton;\n      if (!this.state.startGameValue)\n        this.setState({ highlightButton: newHighlight });\n    }, 400);\n  }\n\n  stopBlinker() { //stop the blinker button when clicked\n    clearInterval(blinker);\n  }\n\n  changeMode(darkMode) { //toggle the dark and light mode\n    this.setState({ darkMode: !darkMode });\n  }\n\n  setScores(gameWinner) { //setting the scores of the human player\n    let status = \"WIN\";\n    if (gameWinner == \"AGENT\") status = \"LOST\";\n    else if (gameWinner == \"TIE\") status = \"TIE\";\n    let score = { game: \"9*9\", depth: \"ULTIMATE\", winner: status };\n    let history = localStorage.getItem(\"scores\");\n    let a = [];\n    if (history) a = JSON.parse(history) || [];\n\n    a.push(score);\n    localStorage.setItem(\"scores\", JSON.stringify(a));\n  }\n\n  checkTie(bigBoard) { //to check if there is a TIE in a localBoard of the 9*9 game\n    let outer_row, outer_column, inner_row, inner_column;\n    for (outer_row = 0; outer_row < 3; outer_row++) {\n      for (outer_column = 0; outer_column < 3; outer_column++) {\n        let tie_flag = true;\n        for (inner_row = 0; inner_row < 3; inner_row++) {\n          for (inner_column = 0; inner_column < 3; inner_column++) {\n            if (\n              bigBoard[outer_row][outer_column][inner_row][inner_column] ===\n                \" \" ||\n              this.state.ultimateWinBoard[outer_row][outer_column] !== \" \"\n            ) {\n              tie_flag = false;\n            }\n          }\n        }\n        if (tie_flag === true) {\n          let ultimateBoard = this.state.ultimateWinBoard.slice();\n\n          ultimateBoard[outer_row][outer_column] = \"T\";\n\n          this.setState({\n            ultimateWinBoard: ultimateBoard,\n          });\n        }\n      }\n    }\n  }\n\n  alterBigBoardRow(//to change the icons of the winner and loser in row\n    winner_symbol,\n    winner_status,\n    loser_symbol,\n    loser_status,\n    win_row\n  ) {\n    let copy_bigBoard = this.state.bigboard.slice();\n    for (let outer_row = 0; outer_row < 3; outer_row++) {\n      for (let outer_column = 0; outer_column < 3; outer_column++) {\n        for (let inner_row = 0; inner_row < 3; inner_row++) {\n          for (let inner_column = 0; inner_column < 3; inner_column++) {\n            if (outer_row === win_row) {\n              copy_bigBoard[outer_row][outer_column][inner_row][\n                inner_column\n              ] = winner_status;\n            } else {\n              if (\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] === winner_symbol\n              ) {\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] = winner_status;\n              } else if (\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] === loser_symbol\n              ) {\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] = loser_status;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.setState({\n      bigboard: copy_bigBoard,\n    });\n  }\n\n  alterBigBoardColumn( //to change the icons of the winner and loser in column\n    winner_symbol,\n    winner_status,\n    loser_symbol,\n    loser_status,\n    win_column\n  ) {\n    let copy_bigBoard = this.state.bigboard.slice();\n\n    for (let outer_row = 0; outer_row < 3; outer_row++) {\n      for (let outer_column = 0; outer_column < 3; outer_column++) {\n        for (let inner_row = 0; inner_row < 3; inner_row++) {\n          for (let inner_column = 0; inner_column < 3; inner_column++) {\n            if (outer_column === win_column) {\n              copy_bigBoard[outer_row][outer_column][inner_row][\n                inner_column\n              ] = winner_status;\n            } else {\n              if (\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] === winner_symbol\n              ) {\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] = winner_status;\n              } else if (\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] === loser_symbol\n              ) {\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] = loser_status;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.setState({\n      bigboard: copy_bigBoard,\n    });\n  }\n\n  alterBigBoardLeftDiagonal( //to change the icons of the winner and loser in left diagonal\n    winner_symbol,\n    winner_status,\n    loser_symbol,\n    loser_status\n  ) {\n    let copy_bigBoard = this.state.bigboard.slice();\n\n    for (let outer_row = 0; outer_row < 3; outer_row++) {\n      for (let outer_column = 0; outer_column < 3; outer_column++) {\n        for (let inner_row = 0; inner_row < 3; inner_row++) {\n          for (let inner_column = 0; inner_column < 3; inner_column++) {\n            if (\n              (outer_row === 0 && outer_column === 0) ||\n              (outer_row === 1 && outer_column === 1) ||\n              (outer_row === 2 && outer_column === 2)\n            ) {\n              copy_bigBoard[outer_row][outer_column][inner_row][\n                inner_column\n              ] = winner_status;\n            } else {\n              if (\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] === winner_symbol\n              ) {\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] = winner_status;\n              } else if (\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] === loser_symbol\n              ) {\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] = loser_status;\n              }\n            }\n          }\n        }\n      }\n    }\n    this.setState({\n      bigboard: copy_bigBoard,\n    });\n  }\n\n  alterBigBoardRightDiagonal( //to change the icons of the winner and loser in right diagonal\n    winner_symbol,\n    winner_status,\n    loser_symbol,\n    loser_status\n  ) {\n    let copy_bigBoard = this.state.bigboard.slice();\n    for (let outer_row = 0; outer_row < 3; outer_row++) {\n      for (let outer_column = 0; outer_column < 3; outer_column++) {\n        for (let inner_row = 0; inner_row < 3; inner_row++) {\n          for (let inner_column = 0; inner_column < 3; inner_column++) {\n            if (\n              (outer_row === 0 && outer_column === 2) ||\n              (outer_row === 1 && outer_column === 1) ||\n              (outer_row === 2 && outer_column === 0)\n            ) {\n              copy_bigBoard[outer_row][outer_column][inner_row][\n                inner_column\n              ] = winner_status;\n            } else {\n              if (\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] === winner_symbol\n              ) {\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] = winner_status;\n              } else if (\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] === loser_symbol\n              ) {\n                copy_bigBoard[outer_row][outer_column][inner_row][\n                  inner_column\n                ] = loser_status;\n              }\n            }\n          }\n        }\n      }\n    }\n    this.setState({\n      bigboard: copy_bigBoard,\n    });\n  }\n\n  setWinner(gameWinner) {\n    let topHeading = winMessage;\n    if (gameWinner == \"AGENT\") topHeading = loseMessage;\n\n    this.setScores(gameWinner);\n    this.setState({\n      winner: gameWinner,\n      heading: topHeading,\n    });\n  }\n\n  checkFinalTie() { //to check if there is a TIE condition in the global board (entire game)\n    let final_tie_flag = true;\n    for (let outer_row = 0; outer_row < 3; outer_row++) {\n      for (let outer_column = 0; outer_column < 3; outer_column++) {\n        for (let inner_row = 0; inner_row < 3; inner_row++) {\n          for (let inner_column = 0; inner_column < 3; inner_column++) {\n            if (\n              this.state.bigboard[outer_row][outer_column][inner_row][\n                inner_column\n              ] === \" \"\n            ) {\n              final_tie_flag = false;\n            }\n          }\n        }\n      }\n    }\n\n    if (final_tie_flag === true) {\n      this.setState({\n        winner: \"TIE\",\n        ultimateWin: true,\n        heading: drawMessage,\n      });\n\n      this.setScores(\"TIE\");\n    }\n  }\n\n  check_ultimate_win(copy_board) { //to check if there is a win in the global board\n    if (this.state.ultimateWin === false) { //row\n      for (let i = 0; i < 3; i++) {\n        //for row\n        if (\n          copy_board[i][0] === copy_board[i][1] &&\n          copy_board[i][0] === copy_board[i][2] &&\n          copy_board[i][1] === copy_board[i][2] &&\n          copy_board[i][0] !== \" \"\n        ) {\n          if (copy_board[i][0] === \"O\") {\n            this.alterBigBoardRow(\"O\", \"WH\", \"X\", \"LA\", i);\n            this.setWinner(\"HUMAN\");\n          } else if (copy_board[i][0] === \"X\") {\n            this.alterBigBoardRow(\"X\", \"WA\", \"O\", \"LH\", i);\n            this.setWinner(\"AGENT\");\n          }\n          this.setState({\n            ultimateWin: true,\n            ultimateWinBoard: copy_board,\n          });\n        }\n      }\n    }\n\n    if (this.state.ultimateWin === false) { //column\n      for (let i = 0; i < 3; i++) {\n        // for column\n        if (\n          copy_board[0][i] === copy_board[1][i] &&\n          copy_board[0][i] === copy_board[2][i] &&\n          copy_board[1][i] === copy_board[2][i] &&\n          copy_board[0][i] !== \" \"\n        ) {\n          if (copy_board[0][i] === \"O\") {\n            this.alterBigBoardColumn(\"O\", \"WH\", \"X\", \"LA\", i);\n            this.setWinner(\"HUMAN\");\n          } else if (copy_board[0][i] === \"X\") {\n            this.alterBigBoardColumn(\"X\", \"WA\", \"O\", \"LH\", i);\n            this.setWinner(\"AGENT\");\n          }\n          this.setState({\n            ultimateWin: true,\n            ultimateWinBoard: copy_board,\n          });\n        }\n      }\n    }\n\n    if (this.state.ultimateWin === false) { //left diagonal\n      if (\n        copy_board[0][0] === copy_board[1][1] &&\n        copy_board[0][0] === copy_board[2][2] &&\n        copy_board[1][1] === copy_board[2][2] &&\n        copy_board[0][0] !== \" \"\n      ) {\n        if (copy_board[0][0] === \"O\") {\n          this.alterBigBoardLeftDiagonal(\"O\", \"WH\", \"X\", \"LA\");\n          this.setWinner(\"HUMAN\");\n        } else if (copy_board[0][0] === \"X\") {\n          this.alterBigBoardLeftDiagonal(\"X\", \"WA\", \"O\", \"LH\");\n          this.setWinner(\"AGENT\");\n        }\n        this.setState({\n          ultimateWin: true,\n          ultimateWinBoard: copy_board,\n        });\n      }\n    }\n\n    if (this.state.ultimateWin === false) { //right diagonal\n      if (\n        copy_board[0][2] === copy_board[1][1] &&\n        copy_board[0][2] === copy_board[2][0] &&\n        copy_board[1][1] === copy_board[2][0] &&\n        copy_board[0][2] !== \" \"\n      ) {\n        if (copy_board[0][2] === \"O\") {\n          this.alterBigBoardRightDiagonal(\"O\", \"WH\", \"X\", \"LA\");\n          this.setWinner(\"HUMAN\");\n        } else if (copy_board[0][2] === \"X\") {\n          this.alterBigBoardRightDiagonal(\"X\", \"WA\", \"O\", \"LH\");\n          this.setWinner(\"AGENT\");\n        }\n        this.setState({\n          ultimateWin: true,\n          ultimateWinBoard: copy_board,\n        });\n      }\n    }\n    if (this.state.ultimateWin === false) {\n      this.checkFinalTie();\n    }\n  }\n\n  place_partial(bigBoard, outer_row, outer_column, symbol) { //to put the winning symbol in local boards\n    for (let inner_row = 0; inner_row < 3; inner_row++) {\n      for (let inner_column = 0; inner_column < 3; inner_column++) {\n        bigBoard[outer_row][outer_column][inner_row][inner_column] = symbol;\n      }\n    }\n\n    let copyUltimateWinBoard_1 = this.state.ultimateWinBoard.slice();\n    copyUltimateWinBoard_1[outer_row][outer_column] = symbol;\n\n    this.setState({\n      bigboard: bigBoard,\n      ultimateWinBoard: copyUltimateWinBoard_1,\n    });\n\n    let copyUltimateWinBoard_2 = this.state.ultimateWinBoard.slice();\n    this.check_ultimate_win(copyUltimateWinBoard_2);\n  }\n\n  checkPartialWin(bigBoard) { //to check if there is a win by any player in the local boards\n    for (let outer_row = 0; outer_row < 3; outer_row++) { //for rows\n      for (let outer_column = 0; outer_column < 3; outer_column++) {\n        for (let i = 0; i < 3; i++) {\n          if (\n            bigBoard[outer_row][outer_column][i][0] ===\n              bigBoard[outer_row][outer_column][i][1] &&\n            bigBoard[outer_row][outer_column][i][1] ===\n              bigBoard[outer_row][outer_column][i][2] &&\n            bigBoard[outer_row][outer_column][i][0] ===\n              bigBoard[outer_row][outer_column][i][2] &&\n            bigBoard[outer_row][outer_column][i][0] !== \" \"\n          ) {\n            if (bigBoard[outer_row][outer_column][i][0] === \"O\") {\n              this.place_partial(bigBoard, outer_row, outer_column, \"O\");\n            } else if (bigBoard[outer_row][outer_column][i][0] === \"X\") {\n              this.place_partial(bigBoard, outer_row, outer_column, \"X\");\n            }\n          }\n        }\n      }\n    }\n\n    for (let outer_row = 0; outer_row < 3; outer_row++) { //for columns\n      for (let outer_column = 0; outer_column < 3; outer_column++) {\n        for (let i = 0; i < 3; i++) {\n          if (\n            bigBoard[outer_row][outer_column][0][i] ===\n              bigBoard[outer_row][outer_column][1][i] &&\n            bigBoard[outer_row][outer_column][0][i] ===\n              bigBoard[outer_row][outer_column][2][i] &&\n            bigBoard[outer_row][outer_column][1][i] ===\n              bigBoard[outer_row][outer_column][2][i] &&\n            bigBoard[outer_row][outer_column][0][i] !== \" \"\n          ) {\n            if (bigBoard[outer_row][outer_column][0][i] === \"O\") {\n              this.place_partial(bigBoard, outer_row, outer_column, \"O\");\n            } else if (bigBoard[outer_row][outer_column][0][i] === \"X\") {\n              this.place_partial(bigBoard, outer_row, outer_column, \"X\");\n            }\n          }\n        }\n      }\n    }\n\n    for (let outer_row = 0; outer_row < 3; outer_row++) { //for left diagonal\n      for (let outer_column = 0; outer_column < 3; outer_column++) {\n        if (\n          bigBoard[outer_row][outer_column][0][0] ===\n            bigBoard[outer_row][outer_column][1][1] &&\n          bigBoard[outer_row][outer_column][0][0] ===\n            bigBoard[outer_row][outer_column][2][2] &&\n          bigBoard[outer_row][outer_column][1][1] ===\n            bigBoard[outer_row][outer_column][2][2] &&\n          bigBoard[outer_row][outer_column][0][0] !== \" \"\n        ) {\n          if (bigBoard[outer_row][outer_column][0][0] === \"O\") {\n            this.place_partial(bigBoard, outer_row, outer_column, \"O\");\n          } else if (bigBoard[outer_row][outer_column][0][0] === \"X\") {\n            this.place_partial(bigBoard, outer_row, outer_column, \"X\");\n          }\n        }\n      }\n    }\n\n    for (let outer_row = 0; outer_row < 3; outer_row++) { //for right diagonal\n      for (let outer_column = 0; outer_column < 3; outer_column++) {\n        if (\n          bigBoard[outer_row][outer_column][0][2] ===\n            bigBoard[outer_row][outer_column][1][1] &&\n          bigBoard[outer_row][outer_column][0][2] ===\n            bigBoard[outer_row][outer_column][2][0] &&\n          bigBoard[outer_row][outer_column][1][1] ===\n            bigBoard[outer_row][outer_column][2][0] &&\n          bigBoard[outer_row][outer_column][0][2] !== \" \"\n        ) {\n          if (bigBoard[outer_row][outer_column][0][2] === \"O\") {\n            this.place_partial(bigBoard, outer_row, outer_column, \"O\");\n          } else if (bigBoard[outer_row][outer_column][0][2] === \"X\") {\n            this.place_partial(bigBoard, outer_row, outer_column, \"X\");\n          }\n        }\n      }\n    }\n\n    this.checkTie(bigBoard);\n  }\n\n  checkValidityOfMove(outer_row, outer_column) {\n    if (\n      this.state.rowToPlace !== \" \" &&\n      this.state.ultimateWinBoard[this.state.rowToPlace][\n        this.state.columnToPlace\n      ] === \" \"\n    ) {\n      if (outer_row !== this.state.rowToPlace) return false;\n      else if (outer_column !== this.state.columnToPlace) return false;\n      else if (\n        outer_row === this.state.rowToPlace &&\n        outer_column === this.state.columnToPlace\n      )\n        return true;\n    } else {\n      return true;\n    }\n  }\n\n  resetBoard() { //to reset the board back to the original state when reset happens\n    this.setState({\n      bigboard: [\n        [\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n        ],\n\n        [\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n        ],\n\n        [\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n\n          [\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n            [\" \", \" \", \" \"],\n          ],\n        ],\n      ],\n    });\n  }\n\n  hintPlacer() { // function to handle the display of hint boxes for the human player\n    if (\n      this.state.ultimateWinBoard[this.state.rowToPlace][\n        this.state.columnToPlace\n      ] === \" \"\n    ) {\n      this.setState({\n        messageForHint: \"Place in the cell\",\n      });\n    } else {\n      this.setState({\n        messageForHint: \"Place anywhere\",\n      });\n    }\n  }\n\n  sleep = (milliseconds) => {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  };\n\n  handleCellClick = (e, outerRow, outerColumn, innerRow, innerColumn) => { //to place the human and agent's symbols\n    if (\n      this.state.startGameValue === true &&\n      this.state.ultimateWin === false &&\n      this.state.turn === \"HUMAN\"\n    ) {\n      let copy_bigBoard1 = this.state.bigboard.slice();\n      if (\n        copy_bigBoard1[outerRow][outerColumn][innerRow][innerColumn] === \" \"\n      ) {\n        if (this.checkValidityOfMove(outerRow, outerColumn) === true) {\n          this.setState({\n            messageForError: false,\n          });\n          this.playAudio(\"audio-element-icon\");\n\n          copy_bigBoard1[outerRow][outerColumn][innerRow][innerColumn] = \"O\";\n\n          this.setState({\n            bigboard: copy_bigBoard1,\n            turn: \"AGENT\",\n            heading: agentTurn,\n          });\n\n          let copy_bigBoard2 = this.state.bigboard.slice();\n          this.checkPartialWin(copy_bigBoard2);\n\n          this.sleep(0.5).then(() => {\n            if (this.state.ultimateWin === false) {\n              axios\n                .get(\n                  \"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn-ultimate\", //axios request to the backend with appropriate data of human's move\n                  {\n                    params: {\n                      board: JSON.stringify(this.state.bigboard),\n                      checkboard: JSON.stringify(this.state.ultimateWinBoard),\n                      previous_move: JSON.stringify([\n                        outerRow,\n                        outerColumn,\n                        innerRow,\n                        innerColumn,\n                      ]),\n                    },\n                  }\n                )\n                .then((res) => {\n                  let copy_board1 = this.state.bigboard.slice();\n                  copy_board1[res.data[\"agent-move\"][0]][\n                    res.data[\"agent-move\"][1]\n                  ][res.data[\"agent-move\"][2]][res.data[\"agent-move\"][3]] = \"X\";\n                  if (this.state.startGameButton === \"Reset Game\") {\n                    this.setState({\n                      bigboard: copy_board1,\n                      rowToPlace: res.data[\"agent-move\"][2],\n                      columnToPlace: res.data[\"agent-move\"][3],\n                      turn: \"HUMAN\",\n                      heading: humanTurn,\n                      agentOuterRow: res.data[\"agent-move\"][0],\n                      agentOuterColumn: res.data[\"agent-move\"][1],\n                      agentInnerRow: res.data[\"agent-move\"][2],\n                      agentInnerColumn: res.data[\"agent-move\"][3],\n                    });\n                    let copy_bigBoard2 = this.state.bigboard.slice();\n                    this.checkPartialWin(copy_bigBoard2);\n\n                    this.hintPlacer();\n                    this.sleep(0.5).then(() => {\n                      if (this.state.ultimateWin === true) {\n                        this.sleep(5).then(() => {\n                          this.props.update_Win_Nine(\"nine\", this.state.winner);\n                        });\n                      }\n                    });\n                  } else {\n                    this.resetBoard();\n                  }\n                })\n                .catch((err) => {\n                  console.log(err);\n                });\n            } else {\n              this.sleep(5).then(() => {\n                this.props.update_Win_Nine(\"nine\", this.state.winner);\n              });\n            }\n          });\n        } else {\n          this.setState({\n            messageForError: true,\n          });\n        }\n      } else {\n        this.setState({\n          messageForError: true,\n        });\n      }\n    }\n  };\n\n  handleStartGame = (e, startGame) => { //function to start abd reset the game\n    this.playAudio(\"audio-element-start\");\n\n    if (startGame === \"Start Game\") {\n      this.resetBoard();\n      let topHeading = humanTurn;\n      if (this.props.gameBeginner == \"AGENT\") topHeading = agentTurn;\n      if (this.props.gameBeginner === \"HUMAN\") {\n        this.setState({\n          messageForHint: \"Place Anywhere\",\n        });\n      }\n      this.setState({\n        startGameButton: \"Reset Game\",\n        startGameValue: true,\n        highlightButton: false,\n        turn: this.props.gameBeginner,\n        heading: topHeading,\n      });\n\n      if (this.state.turn === \"AGENT\") {\n        axios\n          .get(\n            \"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn-ultimate\", //request with appropriate data of human's move to be sent to the backend\n            {\n              params: {\n                board: JSON.stringify(this.state.bigboard),\n                checkboard: JSON.stringify(this.state.ultimateWinBoard),\n                previous_move: JSON.stringify([-1, -1, -1, -1]),\n              },\n            }\n          )\n          .then((res) => {\n            let copy_board1 = this.state.bigboard.slice();\n            copy_board1[res.data[\"agent-move\"][0]][res.data[\"agent-move\"][1]][\n              res.data[\"agent-move\"][2]\n            ][res.data[\"agent-move\"][3]] = \"X\";\n\n            if (this.state.startGameButton === \"Reset Game\") {\n              this.setState({\n                bigboard: copy_board1,\n                rowToPlace: res.data[\"agent-move\"][2],\n                columnToPlace: res.data[\"agent-move\"][3],\n                turn: \"HUMAN\",\n                heading: humanTurn,\n                agentOuterRow: res.data[\"agent-move\"][0],\n                agentOuterColumn: res.data[\"agent-move\"][1],\n                agentInnerRow: res.data[\"agent-move\"][2],\n                agentInnerColumn: res.data[\"agent-move\"][3],\n              });\n              let copy_bigBoard2 = this.state.bigboard.slice();\n              this.checkPartialWin(copy_bigBoard2);\n              this.hintPlacer();\n            } else {\n              this.resetBoard();\n            }\n          });\n      }\n    } else if (startGame === \"Reset Game\" && !this.state.ultimateWin) {\n      let copy_board = this.state.bigboard.slice();\n\n      for (let outer_row = 0; outer_row < 3; outer_row++) {\n        for (let outer_column = 0; outer_column < 3; outer_column++) {\n          for (let inner_row = 0; inner_row < 3; inner_row++) {\n            for (let inner_column = 0; inner_column < 3; inner_column++) {\n              copy_board[outer_row][outer_column][inner_row][inner_column] =\n                \" \";\n            }\n          }\n        }\n      }\n\n      this.setState({\n        bigboard: copy_board,\n        gameBeginner: this.props.gameBeginner,\n        startGameButton: \"Start Game\",\n        startGameValue: false,\n        ultimateWin: false,\n        winner: \" \",\n        rowToPlace: \" \",\n        columnToPlace: \" \",\n        ultimateWinBoard: [\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n        ],\n        agentOuterRow: \" \",\n        agentOuterColumn: \" \",\n        agentInnerRow: \" \",\n        agentInnerColumn: \" \",\n        turn: this.props.gameBeginner,\n        heading: \"RED NINJA TIC TAC TOE\",\n      });\n\n      if (this.props.gameBeginner === \"HUMAN\") {\n        this.setState({\n          messageForHint: \"Place Anywhere\",\n        });\n      }\n    }\n  };\n\n  checkDarkHighlight() {}\n\n  render() {\n    return (\n      <div\n        className={classNames(styles.landingBody, {\n          [styles.whiteBg]: !this.state.darkMode,\n        })}\n      >\n        <div style={{ margin: \"auto\", width: \"700px\", maxWidth: \"90%\" }}>\n          <Container\n            className={classNames(\n              styles.heading,\n              styles.nineHeading,\n              styles.board,\n              { [styles.lightHeading]: !this.state.darkMode }\n            )}\n          >\n            <Row>\n              <Col>\n                <h1 className={styles.title}>\n                  {this.state.heading}{\" \"}\n                  {this.state.turn === \"HUMAN\" || !this.state.startGameValue ? (\n                    \"\"\n                  ) : (\n                    <i\n                      className={\n                        \"fas fa-spinner fa-1x fa-pulse ml-2 \" +\n                        styles.nineSpinner\n                      }\n                    ></i>\n                  )}\n                </h1>\n              </Col>\n            </Row>\n          </Container>\n          <Container className={styles.board}>\n            <Container fluid=\"true\">\n              {this.state.bigboard.map((row, outerRow) => (\n                <Row>\n                  {row.map((column, outerColumn) => (\n                    <Col\n                      md\n                      style={cellStyle1}\n                      className={{ [styles.greyCell]: !this.state.darkMode }}\n                    >\n                      {this.state.bigboard.map((inner_row, innerRow) => (\n                        <Row style={{ maxWidth: \"100%\", margin: \"0 auto\" }}>\n                          {inner_row.map((inner_column, innerColumn) => (\n                            <Col\n                              md\n                              style={\n                                (outerRow === this.state.rowToPlace &&\n                                  outerColumn === this.state.columnToPlace &&\n                                  this.state.rowToPlace !== \" \" &&\n                                  this.state.columnToPlace !== \" \" &&\n                                  this.state.ultimateWin === false &&\n                                  this.state.darkMode &&\n                                  this.state.messageForHint ===\n                                    \"Place in the cell\") ||\n                                (outerRow == this.state.agentOuterRow &&\n                                  innerRow == this.state.agentInnerRow &&\n                                  outerColumn == this.state.agentOuterColumn &&\n                                  innerColumn == this.state.agentInnerColumn &&\n                                  this.state.agentOuterRow !== \" \" &&\n                                  this.state.darkMode &&\n                                  !this.state.ultimateWin)\n                                  ? cellStyle3\n                                  : cellStyle2\n                              }\n                              className={classNames(styles.cellNine, {\n                                [styles.greyCell]: !this.state.darkMode,\n                                [styles.highlighted]:\n                                  (outerRow === this.state.rowToPlace &&\n                                    outerColumn === this.state.columnToPlace &&\n                                    this.state.rowToPlace !== \" \" &&\n                                    this.state.columnToPlace !== \" \" &&\n                                    this.state.ultimateWin === false &&\n                                    !this.state.darkMode &&\n                                    this.state.messageForHint ===\n                                      \"Place in the cell\") ||\n                                  (outerRow == this.state.agentOuterRow &&\n                                    innerRow == this.state.agentInnerRow &&\n                                    outerColumn ==\n                                      this.state.agentOuterColumn &&\n                                    innerColumn ==\n                                      this.state.agentInnerColumn &&\n                                    this.state.agentOuterRow !== \" \" &&\n                                    !this.state.darkMode &&\n                                    !this.state.ultimateWin),\n                              })}\n                              onClick={(e) =>\n                                this.handleCellClick(\n                                  e,\n                                  outerRow,\n                                  outerColumn,\n                                  innerRow,\n                                  innerColumn\n                                )\n                              }\n                            >\n                              {\n                                <div style={{ textAlign: \"center\" }}>\n                                  {\n                                    this.state.symbol[\n                                      this.state.bigboard[outerRow][\n                                        outerColumn\n                                      ][innerRow][innerColumn]\n                                    ]\n                                  }\n                                </div>\n                              }\n                            </Col>\n                          ))}\n                        </Row>\n                      ))}\n                    </Col>\n                  ))}\n                </Row>\n              ))}\n            </Container>\n          </Container>\n\n          <Container\n            styles={{ marginTop: \"1% !important\" }}\n            className={classNames(\n              styles.boardInfo,\n              styles.board,\n              styles.nineBoardInfo,\n              { [styles.lightHeading]: !this.state.darkMode }\n            )}\n          >\n            <Row style={{ padding: \"1%\" }}>\n              <Col\n                style={{ cursor: \"pointer\", fontSize: \"1.5rem\" }}\n                className={styles.center}\n                xs={4}\n              >\n                <i\n                  onClick={() => window.open(\"/rules\", \"_blank\")}\n                  class=\"fa fa-info-circle\"\n                  aria-hidden=\"true\"\n                ></i>\n              </Col>\n              <Col className={styles.center}>\n                <i class=\"fa fa-sun\" aria-hidden=\"true\"></i>\n              </Col>\n              <Col className={styles.center}>\n                {this.state.darkMode ? (\n                  <i\n                    class=\"fa fa-2x fa-toggle-on\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => this.changeMode(this.state.darkMode)}\n                    aria-hidden=\"true\"\n                  ></i>\n                ) : (\n                  <i\n                    class=\"fa fa-2x fa-toggle-off\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => this.changeMode(this.state.darkMode)}\n                    aria-hidden=\"true\"\n                  ></i>\n                )}\n              </Col>\n              <Col className={styles.center}>\n                <i class=\"fa fa-moon\" aria-hidden=\"true\"></i>\n              </Col>\n              <Col xs={4}>\n                <Button\n                  variant=\"dark\"\n                  disabled={this.state.ultimateWin}\n                  className={classNames(styles.button, {\n                    [styles.lightHeading]: !this.state.darkMode,\n                    [styles.highlightButton]: this.state.highlightButton,\n                  })}\n                  onClick={(e) =>\n                    this.handleStartGame(e, this.state.startGameButton)\n                  }\n                >\n                  {this.state.startGameButton}\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n\n          <audio className=\"audio-element-start\">\n            <source src={start_game_sound}></source>\n          </audio>\n\n          <audio className=\"audio-element-icon\">\n            <source src={place_icon_sound}></source>\n          </audio>\n          {this.state.startGameValue === true &&\n            this.state.turn === \"HUMAN\" && (\n              <Message\n                row_to_place={this.state.rowToPlace}\n                column_to_place={this.state.columnToPlace}\n                messageForHint={this.state.messageForHint}\n              />\n            )}\n          {this.state.messageForError && (\n            <Message messageForError={this.state.messageForError} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst cellStyle1 = {\n  backgroundColor: \"black\",\n  textAlign: \"center\",\n  border: \"1px solid\",\n  width: \"10%\",\n  padding: \"3%\",\n  flexBasis: 0,\n  flexGrow: 1,\n  minWidth: 0,\n  maxWidth: \"90%\",\n};\n\nconst cellStyle2 = {\n  backgroundColor: \"black\",\n  textAlign: \"center\",\n  border: \"1px solid\",\n  width: \"5%\",\n  height: 60,\n  padding: \"1%\",\n  flexBasis: 0,\n  flexGrow: 1,\n  minWidth: 0,\n  maxWidth: \"90%\",\n};\n\nconst cellStyle3 = {\n  backgroundColor: \"grey\",\n  textAlign: \"center\",\n  border: \"1px solid\",\n  width: \"5%\",\n  height: 60,\n  padding: \"1%\",\n  flexBasis: 0,\n  flexGrow: 1,\n  minWidth: 0,\n  maxWidth: \"90%\",\n};\n\nconst heading = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: \"80%\",\n  lineHeight: 1.5,\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button} from \"react-bootstrap\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport styles from \"../static/css/Landing.module.css\";\n\nexport default class Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.landingBody}>\n        <div className={styles.content}>\n          <h1 className={styles.heading}>The Mars Rover Mission</h1>\n          <h4 className={styles.subheading}>\n            This game is an AI driven Tic Tac Toe <br /> The game has\n            incremental levels of difficulty, but let's see if you can win\n            against the ultimate 3x3!\n          </h4>\n          <Link to=\"/three\">\n            <Button variant=\"danger\" size=\"lg\">\n              {\" \"}\n              3*3 TIC-TAC-TOE\n            </Button>\n          </Link>\n          <Link to=\"/nine\">\n            <Button variant=\"danger\" size=\"lg\">\n              {\" \"}\n              9*9 TIC-TAC-TOE\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport styles from \"../static/css/error.module.css\";\n\nexport default class Error extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={styles.landingBody}>\n        <div className={styles.content}>\n          <h1 className={styles.heading}>\n            Looks like you're lost in deep space.\n          </h1>\n          <Link to=\"/\">\n            <Button size=\"lg\" variant=\"danger\" className={styles.button}>\n              Go back home\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {Container, Col, Row } from \"react-bootstrap\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport overviewStyles from \"../static/css/Overview.module.css\";\n\nexport default class Overview extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={overviewStyles.landingBody}>\n        <Container className={overviewStyles.contentContainer}>\n          <h1 className={overviewStyles.heading}>About the Application</h1>\n          <div className={overviewStyles.content}>\n            <p className={overviewStyles.text}>\n              This application is an AI algorithm based Tic-Tac-Toe with\n              incremental levels of difficulty. The game uses the Minimax\n              algorithm. The app supports two kinds of games:{\" \"}\n              <strong>3x3</strong> and <strong>9x9</strong> <br /> Further for\n              the 3x3 tic-tac-toe, there are a total of 4 difficulty levels in\n              the game and the ultimate TicTacToe that is unbeatable. Each of\n              these difficulties has a gradual increase in the smartness of the\n              agent/computer that finally reaches the unbeatable agent.\n            </p>\n          </div>\n          <div className={overviewStyles.content}>\n            <h3 className={overviewStyles.heading}>Game Levels</h3>\n            <p className={overviewStyles.text}>\n              In each of the levels, a custom version of the minimax algorithm\n              is run, that assigns scores to each configuration based on the\n              levels and also restricts the depth of the recursion. <br />\n              Here, levels indicate the number of nodes upto which the agent can\n              search/traverse in the recursion tree.\n            </p>\n            <Row className=\"mb-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Level 1 :</strong>\n                  <br />\n                  At level 1, we have used a random function that arbitrarily\n                  selects one of the empty cells for the agent to make its next\n                  move.\n                  <br />\n                  <br />\n                </li>\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Level 2 :</strong>\n                  <br />\n                  The agent can now look at upto 2 levels deep from the current\n                  state. The number of crossover win states that a particular\n                  empty cell can contribute to is considered and utilities are\n                  increased on backtracking to the parent node configuration.\n                  <br />\n                  <br />\n                </li>\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <img\n                  className={overviewStyles.gifs}\n                  src={require(\"../static/assets/about/level2.gif\")}\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <img\n                  className={overviewStyles.gifs}\n                  src={require(\"../static/assets/about/l4-light.gif\")}\n                />\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Level 3 :</strong>\n                  <br />\n                  Apart from the crossover win states, we now allow the agent to\n                  look for any immediate advantage configurations and boost the\n                  utilities for those states so that the agent favours them\n                  more.\n                  <br />\n                  <br />\n                </li>\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Level 4 :</strong>\n                  <br />\n                  Level 4: At level 4, the agent now can look upto 4 depths,\n                  adopts all the strategies of level 2 and 3, and additionally\n                  now also tries to block the human player from winning.\n                  <br />\n                  <br />\n                </li>\n              </Col>\n            </Row>\n            <div>\n              <h4 style={{ textAlign: \"left\" }}>Ultimate 3x3</h4>\n              <p className={overviewStyles.text}>\n                For the ultimate tic tac toe, we have used the Minimax\n                algorithm. The agent traverses the entire tree until the leaf\n                node and only then makes a choice. This ensures that the agent\n                will definitely take a move that either results in it’s win or a\n                tie. We have incorporated an optimization layer as well. We have\n                precomputed the utilities for all the configurations of the\n                board - that is the nodes of the tree - and have stored them in\n                a custom data structure beforehand.\n              </p>\n              <img\n                style={{ width: \"50%\", margin: \"5% 0\" }}\n                src={require(\"../static/assets/about/ultimate-dark-tie.gif\")}\n              />\n            </div>\n            <div>\n              <h4 style={{ textAlign: \"left\" }}>\n                <strong>Extreme 9x9</strong>\n              </h4>\n              <p className={overviewStyles.text}>\n                An additional feature that we worked to implement was the 9x9\n                extreme TicTacToe. The rules for this can be found in the{\" \"}\n                <a href=\"/rules\" style={{ color: \"#3b3251\" }}>\n                  Rule Book\n                </a>\n                . While designing the agent for this extreme tic tac toe\n                version, we have a trade-off between the smartness and the\n                response time. This is primarily because, both the depth and the\n                breadth of the recursion tree that is to be explored now is\n                larger in the case of 9x9. We have included optimizations to\n                enable the agent to play mindfully with a shorter response time.\n                The last section mentions about the optimizations.\n              </p>\n              <img\n                style={{ width: \"50%\", margin: \"5% 0\" }}\n                src={require(\"../static/assets/about/extreme-main.gif\")}\n              />\n            </div>\n          </div>\n          <div className={overviewStyles.content}>\n            <h3 className={overviewStyles.heading}>Salient Features</h3>\n            <Row className=\"mb-5 mt-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <img\n                  style={{ width: \"50%\" }}\n                  src={require(\"../static/assets/about/responsive-themes.gif\")}\n                />\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Light & Dark Themes</strong>\n                  <br />\n                  The toggle button located in the bottom panel of the Game\n                  Board can be used to switch between two different theme\n                  settings for the gameplay.\n                  <br />\n                  <br />\n                </li>\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Responsiveness</strong>\n                  <br />\n                  The entire application is responsive and can be used on a\n                  desktop, laptop, mobile device, tablet, iPad etc.\n                  <br />\n                  <br />\n                </li>\n              </Col>\n            </Row>\n            <Row className=\"mb-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Friendly UI</strong>\n                  <br />\n                  This feature was in particular taken care of for the 9x9\n                  tic-tac-toe wherein, the human is guided where his/her next\n                  move is to be placed by highlighting the next board in which\n                  they can make their move.\n                  <br />\n                  <br />\n                </li>\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Comfortable gameplay</strong>\n                  <br />\n                  The application also consists of an indicator on the top bar\n                  of the board denoting who's turn it is. In case of the 9x9\n                  gameplay, since the agent may take a couple of seconds to\n                  respond, a loader has also been included for the users to\n                  notice the same.\n                  <br />\n                  <br />\n                </li>\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <img\n                  className={overviewStyles.gifs}\n                  src={require(\"../static/assets/about/extreme-guide.gif\")}\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <img\n                  style={{ width: \"90%\" }}\n                  src={require(\"../static/assets/about/undo.gif\")}\n                />\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Undo Moves</strong>\n                  <br />\n                  This feature allows users to revert back their moves upto a\n                  particular move. The gameplay would then begin from that move.\n                  This is only in the 3x3 games.\n                  <br />\n                  <br />\n                </li>\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Hint Boxes</strong>\n                  <br />\n                  For the 9x9 game, the users are provided with hint boxes that\n                  appear with a message containing the next board they have to\n                  place their move in. The alert boxes also appear in cases of\n                  incorrect moves.\n                  <br />\n                  <br />\n                </li>\n              </Col>\n            </Row>\n            <Row className=\"mb-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Past Score Records</strong>\n                  <br />\n                  The application also consists of a page where a user can view\n                  their{\" \"}\n                  <a href=\"/rules\" style={{ color: \"#3b3251\" }}>\n                    Past Games'\n                  </a>{\" \"}\n                  results. The records include the Game type (3x3 or 9x9), the\n                  game level, and the result.\n                  <br />\n                  <br />\n                </li>\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Sound effects</strong>\n                  <br />\n                  We have also included fun audio effects that add to the\n                  overall experience of the gameplay for a user.\n                  <br />\n                  <br />\n                </li>\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <img\n                  style={{ width: \"100%\" }}\n                  src={require(\"../static/assets/about/scores.png\")}\n                />\n              </Col>\n            </Row>\n            <Row className=\"mb-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <img\n                  style={{ width: \"90%\" }}\n                  src={require(\"../static/assets/about/error.gif\")}\n                />\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>404 Error Page</strong>\n                  <br />\n                  We have accounted for cases wherein the user may try to access\n                  an undefined route. In such cases we have included a custom\n                  404 error page.\n                  <br />\n                  <br />\n                </li>\n                <li className={overviewStyles.text}>\n                  <i class=\"fas fa-angle-double-right\"></i>{\" \"}\n                  <strong>Browser support</strong>\n                  <br />\n                  The application has been tested on the browsers : Firefox,\n                  Chrome, Edge and Safari.\n                  <br />\n                  <br />\n                </li>\n              </Col>\n            </Row>\n          </div>\n\n          <div className={overviewStyles.content}>\n            <h3 className={overviewStyles.heading}>Optimization Techniques</h3>\n            <p className={overviewStyles.text}>\n              For the 9x9 game, we have included a set of optimizations so as to\n              be able to shorten the response time of the agent. As a result,\n              though there isn't a 100% guarantee that the agent will win, but\n              the agent doesn't play mindlessly either.\n            </p>\n            <br />\n            <br />\n            <Row className=\"mb-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <p className={overviewStyles.text}>\n                  <li>\n                    Alpha Beta pruning to cut off paths that the agent will\n                    certainly not take.\n                  </li>\n                  <br />\n                  <br />\n                  <li>\n                    Restricting the search depth to 5 levels. Since the agent\n                    may not always reach a win state with this restriction,\n                    utilities to these intermediate depths are given by\n                    recycling code from 3x3 DEPTH4 strategy of calculating the\n                    score.\n                  </li>\n                  <br />\n                  <br />\n\n                  <li>\n                    Avoiding unecessary computations. For every configuration\n                    where the agent has to take the next move, the only local\n                    board that has to be explored depends on the previous\n                    human’s move.\n                  </li>\n                </p>\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center\"\n              >\n                <img\n                  className={overviewStyles.gifs}\n                  src={require(\"../static/assets/about/abp.gif\")}\n                />\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport rulesStyles from \"../static/css/Rules.module.css\";\n\nexport default class Overview extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={rulesStyles.landingBody}>\n        <Container className={rulesStyles.contentContainer}>\n          <h1 className={rulesStyles.heading}>Rule Book</h1>\n          <div className={rulesStyles.content}>\n            <h3 className={rulesStyles.heading}>The 3x3 Original Game</h3>\n            <Row className=\"mb-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center mb-5\"\n              >\n                <li className={rulesStyles.text}>\n                  To begin with the configuration of the game has to be\n                  selected. This includes selecting a depth (or a level) and a\n                  player who shall begin the game.\n                  <br />\n                  <br />\n                </li>\n                <li className={rulesStyles.text}>\n                  Once the game play begins, click the <strong>START</strong>{\" \"}\n                  button to play. The robot and the human play in alternation.\n                  Click on any move number to undo all moves made after that\n                  move including itself.\n                  <br />\n                  <br />\n                </li>\n                <li className={rulesStyles.text}>\n                  As in the traditional tic-tac-toe the first person to get\n                  their symbol across an entire row, column or diagonal wins the\n                  game.\n                  <br />\n                  <br />\n                </li>\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center mb-5\"\n              >\n                <img\n                  className={rulesStyles.gifs}\n                  src={require(\"../static/assets/three2.gif\")}\n                />\n              </Col>\n            </Row>\n          </div>\n          <div className={rulesStyles.content}>\n            <h3 className={rulesStyles.heading}>The Extreme 9x9 Game</h3>\n            <p className={rulesStyles.text}>\n              This is an extended version of the original tic-tac-toe. It\n              consists of 2 kinds of boards. First is the global board that\n              contains the entire game, and there are 9 local boards within\n              which smaller games occur. Start by selecting the beginner of the\n              game. The robot and the human will then play in alternation. The\n              first player can place their symbol anywhere in the 81 cells\n              across 9 local boards.\n            </p>\n            <br />\n            <br />\n            <Row className=\"mb-5\">\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center mb-5\"\n              >\n                <img\n                  className={rulesStyles.gifs}\n                  style={{ width: \"100%\" }}\n                  src={require(\"../static/assets/nine-final3.gif\")}\n                />\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={6}\n                className=\"justify-content-center align-self-center mb-5\"\n              >\n                <p className={rulesStyles.text}>\n                  <li>\n                    Following this, suppose a player places their symbol in cell\n                    (i,j) of local board (x,y), then the next player must place\n                    their symbol in any empty cell of the local board (i,j) of\n                    the global board. score.\n                  </li>\n                  <br />\n                  <br />\n                  <li>\n                    Once a local board results in a WIN condition or a TIE\n                    condition, no more moves can be made in that particular\n                    local board.\n                  </li>\n                  <br />\n                  <br />\n                  <li>\n                    In case the local board (i,j) already has a win or a tie\n                    condition, then the player can place their symbol in any of\n                    the empty cells across all the 9 local boards.\n                  </li>\n                </p>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, {useState} from \"react\";\nimport styles from \"../static/css/message.module.css\";\nimport { Toast } from \"react-bootstrap\";\n\nconst Message = (props) => {\n  const [show, setShow] = useState(true);\n\n  if (props.messageForError === true) {\n    return (\n      <div aria-live=\"polite\" aria-atomic=\"true\">\n        <div\n          className={styles.box1}\n          style={{ position: \"absolute\", top: 50, left: 0 }}\n        >\n          <Toast>\n            <Toast.Header closeButton={false} className={styles.text}>\n              <strong className=\"mr-auto\">Hint!!</strong>\n            </Toast.Header>\n            <Toast.Body className={styles.bodytext1}>\n              {\" \"}\n              Wrong Placement! Play in the highlighted localboard\n            </Toast.Body>\n          </Toast>\n        </div>\n      </div>\n    );\n  }\n\n  if (props.messageForHint === \"Place in the cell\") {\n    return (\n      <div aria-live=\"polite\" aria-atomic=\"true\">\n        <div\n          className={styles.box}\n          style={{ position: \"absolute\", top: 50, right: 0 }}\n        >\n          <Toast\n            onClose={() => setShow(false)}\n            show={show}\n            delay={4000}\n            autohide\n          >\n            <Toast.Header className={styles.text}>\n              <strong className=\"mr-auto\">Hint!!</strong>\n            </Toast.Header>\n            <Toast.Body className={styles.bodytext}>\n              Play in localboard {props.row_to_place} {props.column_to_place}{\" \"}\n            </Toast.Body>\n          </Toast>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div aria-live=\"polite\" aria-atomic=\"true\">\n        <div\n          className={styles.box}\n          style={{ position: \"absolute\", top: 50, right: 0 }}\n        >\n          <Toast\n            onClose={() => setShow(false)}\n            show={show}\n            delay={4000}\n            autohide\n          >\n            <Toast.Header className={styles.text}>\n              <strong className=\"mr-auto\">Hint!!</strong>\n            </Toast.Header>\n            <Toast.Body className={styles.bodytext}>\n              Play in any empty localboard\n            </Toast.Body>\n          </Toast>\n        </div>\n      </div>\n    );\n  }\n};\nexport default Message;\n","import React, { Component } from \"react\";\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nimport configStyles from \"../static/css/Config-mallika.module.css\";\n\n\nconst play_game_sound = require(\"../static/assets/sounds/lets-play.mp3\");\n\nexport default class ThreeConfiguration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beginner: this.props.gameBeginner,\n      depth: this.props.depth,\n    };\n  }\n\n  playAudio(audio_element) {\n    const audioEl = document.getElementsByClassName(audio_element)[0];\n    audioEl.play();\n  }\n\n  render() {\n    return (\n      <div className={configStyles.wrapper}>\n        <Container className={configStyles.mainDiv}>\n          <Container\n            className={configStyles.containerBody}\n            style={{ display: \"flex\" }}\n          >\n            <Container\n              style={{\n                marginTop: \"auto\",\n                marginBottom: \"auto\",\n                padding: \"3% 0\",\n              }}\n            >\n              <h1 className={configStyles.heading}>\n                Select your game configuration\n              </h1>\n              <Container className={configStyles.startWrapper}>\n                <Row className=\"mb-5\">\n                  <Col\n                    sm={12}\n                    md={12}\n                    lg={6}\n                    className=\"justify-content-center align-self-center\"\n                  >\n                    <h3 className={configStyles.startContent}>\n                      Choose Beginner :\n                    </h3>\n                  </Col>\n                  <Col\n                    sm={12}\n                    md={12}\n                    lg={6}\n                    className=\"justify-content-center align-self-center\"\n                  >\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        margin: \"0 10%\",\n                        display: \"inline-block\",\n                      }}\n                    >\n                      <i\n                        className={\n                          \"fas fa-robot mr-2 \" +\n                          configStyles.iconStyles +\n                          (this.state.beginner === \"AGENT\"\n                            ? \" \" + configStyles.iconSelect\n                            : \"\")\n                        }\n                        onClick={(e) => {\n                          this.setState({ beginner: \"AGENT\" });\n                          this.props.handleStartAgent_Three(e);\n                        }}\n                      ></i>\n                      <h5 className={configStyles.playerName}>AGENT</h5>\n                    </div>\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        margin: \"0 10%\",\n                        display: \"inline-block\",\n                      }}\n                    >\n                      <i\n                        className={\n                          \"fas fa-user-astronaut mr-2 \" +\n                          configStyles.iconStyles +\n                          (this.state.beginner === \"HUMAN\"\n                            ? \" \" + configStyles.iconSelect\n                            : \"\")\n                        }\n                        onClick={(e) => {\n                          this.setState({ beginner: \"HUMAN\" });\n                          this.props.handleStartHuman_Three(e);\n                        }}\n                      ></i>\n                      <h5 className={configStyles.playerName}>HUMAN</h5>\n                    </div>\n                  </Col>\n                </Row>\n                <Row className=\"mb-5\">\n                  <Col\n                    sm={12}\n                    md={12}\n                    lg={6}\n                    className=\"justify-content-center align-self-center\"\n                  >\n                    <h3 className={configStyles.startContent}>\n                      Difficulty Level:\n                    </h3>\n                  </Col>\n                  <Col\n                    sm={12}\n                    md={12}\n                    lg={6}\n                    className=\"justify-content-center align-self-center\"\n                  >\n                    <Button\n                      size=\"md\"\n                      variant=\"light\"\n                      className={\n                        this.state.depth === 1\n                          ? configStyles.selectedButton\n                          : \"\"\n                      }\n                      onClick={(e) => {\n                        this.setState({ depth: 1 });\n                        this.props.handleDepth_Three(e, 1);\n                      }}\n                    >\n                      1\n                    </Button>\n                    <Button\n                      size=\"md\"\n                      variant=\"light\"\n                      className={\n                        this.state.depth === 2\n                          ? configStyles.selectedButton\n                          : \"\"\n                      }\n                      onClick={(e) => {\n                        this.setState({ depth: 2 });\n                        this.props.handleDepth_Three(e, 2);\n                      }}\n                    >\n                      2\n                    </Button>\n                    <Button\n                      size=\"md\"\n                      variant=\"light\"\n                      className={\n                        this.state.depth === 3\n                          ? configStyles.selectedButton\n                          : \"\"\n                      }\n                      onClick={(e) => {\n                        this.setState({ depth: 3 });\n                        this.props.handleDepth_Three(e, 3);\n                      }}\n                    >\n                      3\n                    </Button>\n                    <Button\n                      size=\"md\"\n                      variant=\"light\"\n                      className={\n                        this.state.depth === 4\n                          ? configStyles.selectedButton\n                          : \"\"\n                      }\n                      onClick={(e) => {\n                        this.setState({ depth: 4 });\n                        this.props.handleDepth_Three(e, 4);\n                      }}\n                    >\n                      4\n                    </Button>\n                    <Button\n                      size=\"md\"\n                      variant=\"light\"\n                      className={\n                        this.state.depth === -1\n                          ? configStyles.selectedButton\n                          : \"\"\n                      }\n                      onClick={(e) => {\n                        this.setState({ depth: -1 });\n                        this.props.handleDepth_Three(e, -1);\n                      }}\n                    >\n                      Ultimate\n                    </Button>\n                  </Col>\n                </Row>\n                <div>\n                  <>\n                    {this.props.depth !== \" \" &&\n                    this.props.gameBeginner != \" \" ? (\n                      <Button\n                        size=\"lg\"\n                        variant=\"light\"\n                        onClick={(e) => {\n                          this.playAudio(\"audio-element-play\");\n                          this.props.update_Three(\"Go To Game\");\n                        }}\n                      >\n                        Let's Play!\n                      </Button>\n                    ) : (\n                      <Button size=\"lg\" variant=\"light\" disabled>\n                        Let's Play!\n                      </Button>\n                    )}\n                  </>\n                </div>\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n        <audio className=\"audio-element-play\">\n          <source src={play_game_sound}></source>\n        </audio>\n      </div>\n    );\n  }\n}\n\nconst iconStyles = {\n  color: \"#FF7885\",\n};\n","import React, { Component} from \"react\";\nimport { MDBAnimation } from \"mdbreact\";\nimport { Button, Container} from \"react-bootstrap\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport styles from \"../static/css/result.module.css\";\n\nexport default class GameResults extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.winner === \"HUMAN\") {\n      return (\n        <div className={styles.wrapper}>\n          <Container className={styles.mainDiv}>\n            <Container\n              className={styles.containerBody}\n              style={{ display: \"flex\" }}\n            >\n              <Container\n                style={{\n                  marginTop: \"auto\",\n                  marginBottom: \"auto\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  padding: \"1%\",\n                }}\n              >\n                <img\n                  className={styles.gif}\n                  src={require(\"../static/assets/win.gif\")}\n                />\n                <br></br>\n                <br></br>\n                <MDBAnimation type=\"fadeIn\" infinite>\n                  <text className={styles.text}>Congrats!!!</text>\n                </MDBAnimation>\n                {this.props.route === \"three\" ? (\n                  <Button\n                    size=\"lg\"\n                    variant=\"light\"\n                    onClick={(e) =>\n                      this.props.update_Three(\"Show Configuration\")\n                    }\n                  >\n                    Play Again!\n                  </Button>\n                ) : (\n                  <Button\n                    size=\"lg\"\n                    variant=\"light\"\n                    onClick={(e) =>\n                      this.props.update_Nine(\"Show Configuration\")\n                    }\n                  >\n                    {\" \"}\n                    Play Again!\n                  </Button>\n                )}\n              </Container>\n            </Container>\n          </Container>\n        </div>\n      );\n    } else if (this.props.winner === \"AGENT\") {\n      return (\n        <div className={styles.wrapper}>\n          <Container className={styles.mainDiv}>\n            <Container\n              className={styles.containerBody}\n              style={{ display: \"flex\" }}\n            >\n              <Container\n                style={{\n                  marginTop: \"auto\",\n                  marginBottom: \"auto\",\n                  padding: \"3% 0\",\n                }}\n              >\n                <img\n                  className={styles.gif}\n                  src={require(\"../static/assets/sad.gif\")}\n                />\n                <MDBAnimation type=\"fadeIn\" infinite>\n                  <text className={styles.text}> Better Luck next time!</text>\n                </MDBAnimation>\n                {this.props.route === \"three\" ? (\n                  <Button\n                    size=\"lg\"\n                    variant=\"light\"\n                    onClick={(e) =>\n                      this.props.update_Three(\"Show Configuration\")\n                    }\n                  >\n                    Play Again!\n                  </Button>\n                ) : (\n                  <Button\n                    size=\"lg\"\n                    variant=\"light\"\n                    onClick={(e) =>\n                      this.props.update_Nine(\"Show Configuration\")\n                    }\n                  >\n                    {\" \"}\n                    Play Again!\n                  </Button>\n                )}\n\n              </Container>\n            </Container>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className={styles.wrapper}>\n          <Container className={styles.mainDiv}>\n            <Container\n              className={styles.containerBody}\n              style={{ display: \"flex\" }}\n            >\n              <Container\n                style={{\n                  marginTop: \"auto\",\n                  marginBottom: \"auto\",\n                  padding: \"3% 0\",\n                }}\n              >\n                <img\n                  className={styles.gif}\n                  src={require(\"../static/assets/tie.gif\")}\n                />\n                <MDBAnimation type=\"fadeIn\" infinite>\n                  <br></br>\n                  <text className={styles.text}>It's A Tie!</text>\n                </MDBAnimation>\n                {this.props.route === \"three\" ? (\n                  <Button\n                    size=\"lg\"\n                    variant=\"light\"\n                    onClick={(e) =>\n                      this.props.update_Three(\"Show Configuration\")\n                    }\n                  >\n                    Play Again!\n                  </Button>\n                ) : (\n                  <Button\n                    size=\"lg\"\n                    variant=\"light\"\n                    onClick={(e) =>\n                      this.props.update_Nine(\"Show Configuration\")\n                    }\n                  >\n                    {\" \"}\n                    Play Again!\n                  </Button>\n                )}\n              </Container>\n            </Container>\n          </Container>\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nimport ThreeBoard from \"./threeBoard.js\";\nimport ThreeConfiguration from \"./threeConfiguration.js\";\nimport GameResults from \"./gameResults.js\";\n\nexport default class ThreeGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showThreeConfigurationComponent: true,\n      showThreeGameComponent: false,\n      showThreeWinComponent: false,\n      depth: -1,\n      gameBeginner: \"HUMAN\",\n      route: \" \",\n      winner: \" \",\n    };\n\n    this.updateStateOfComponents_Three = this.updateStateOfComponents_Three.bind(\n      this\n    );\n    this.updateStateForWinComponent = this.updateStateForWinComponent.bind(\n      this\n    );\n    this.handleStartAgent_Three = this.handleStartAgent_Three.bind(this);\n    this.handleStartHuman_Three = this.handleStartHuman_Three.bind(this);\n    this.handleDepth_Three = this.handleDepth_Three.bind(this);\n  }\n\n  handleStartAgent_Three(e) {\n    this.setState({\n      gameBeginner: \"AGENT\",\n    });\n  }\n\n  handleStartHuman_Three(e) {\n    this.setState({\n      gameBeginner: \"HUMAN\",\n    });\n  }\n\n  handleDepth_Three(e, selected_depth) {\n    this.setState({\n      depth: selected_depth,\n    });\n  }\n\n  updateStateForWinComponent(gameRoute, gameWinner) { //to display the Win component and hide the 3*3 game component\n    setTimeout(\n      () =>\n        this.setState({\n          showThreeConfigurationComponent: false,\n          showThreeGameComponent: false,\n          showThreeWinComponent: true,\n          winner: gameWinner,\n          route: gameRoute,\n        }),\n      2000\n    );\n  }\n\n  updateStateOfComponents_Three(message) { //to display the 3*3 game and hide the configuration component\n    if (message === \"Go To Game\") {\n      this.setState({\n        showThreeConfigurationComponent: false,\n        showThreeGameComponent: true,\n        showThreeWinComponent: false,\n      });\n    } else if (message === \"Show Configuration\") {\n      this.setState({\n        showThreeConfigurationComponent: true,\n        showThreeGameComponent: false,\n        showThreeWinComponent: false,\n        depth: -1,\n        gameBeginner: \"HUMAN\",\n        route: \" \",\n        winner: \" \",\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.showThreeConfigurationComponent && (\n          <ThreeConfiguration\n            update_Three={this.updateStateOfComponents_Three}\n            handleStartAgent_Three={this.handleStartAgent_Three}\n            handleStartHuman_Three={this.handleStartHuman_Three}\n            handleDepth_Three={this.handleDepth_Three}\n            depth={this.state.depth}\n            gameBeginner={this.state.gameBeginner}\n          />\n        )}\n        {this.state.showThreeGameComponent && (\n          <ThreeBoard\n            update_Win_Three={this.updateStateForWinComponent}\n            depth={this.state.depth}\n            gameBeginner={this.state.gameBeginner}\n          />\n        )}\n        {this.state.showThreeWinComponent && (\n          <GameResults\n            update_Three={this.updateStateOfComponents_Three}\n            winner={this.state.winner}\n            route={this.state.route}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport configStyles from \"../static/css/Config-mallika.module.css\";\n\nconst play_game_sound = require(\"../static/assets/sounds/lets-play.mp3\");\n\nexport default class NineConfiguration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showWinComponent: false,\n      showConfigurationComponent: false,\n      showGameConfiguration: false,\n      beginner: this.props.gameBeginner,\n    };\n  }\n\n  playAudio(audio_element) {\n    const audioEl = document.getElementsByClassName(audio_element)[0];\n    audioEl.play();\n  }\n\n  render() {\n    return (\n      <div className={configStyles.wrapper}>\n        <Container className={configStyles.mainDiv}>\n          <Container\n            className={configStyles.containerBody}\n            style={{ display: \"flex\" }}\n          >\n            <Container\n              style={{\n                marginTop: \"auto\",\n                marginBottom: \"auto\",\n                padding: \"3% 0\",\n              }}\n            >\n              <h1\n                className={configStyles.heading}\n                style={{ marginBottom: \"2%\" }}\n              >\n                Select your game configuration\n              </h1>\n              <Container className={configStyles.startWrapper}>\n                <Row className=\"mb-0\">\n                  <Col\n                    sm={12}\n                    md={12}\n                    lg={6}\n                    className=\"justify-content-center align-self-center\"\n                  >\n                    <h3 className={configStyles.startContent}>\n                      Choose Beginner :\n                    </h3>\n                  </Col>\n                  <Col\n                    sm={12}\n                    md={12}\n                    lg={6}\n                    className=\"justify-content-center align-self-center\"\n                  >\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        margin: \"0 10%\",\n                        display: \"inline-block\",\n                      }}\n                    >\n                      <i\n                        className={\n                          \"fas fa-user-astronaut mr-2 \" +\n                          configStyles.iconStyles +\n                          (this.state.beginner === \"HUMAN\"\n                            ? \" \" + configStyles.iconSelect\n                            : \"\")\n                        }\n                        onClick={(e) => {\n                          this.setState({ beginner: \"HUMAN\" });\n                          this.props.handleStartHuman_Nine(e);\n                        }}\n                      ></i>\n                      <h5 className={configStyles.playerName}>HUMAN</h5>\n                    </div>\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        margin: \"0 10%\",\n                        display: \"inline-block\",\n                      }}\n                    >\n                      <i\n                        className={\n                          \"fas fa-robot mr-2 \" +\n                          configStyles.iconStyles +\n                          (this.state.beginner === \"AGENT\"\n                            ? \" \" + configStyles.iconSelect\n                            : \"\")\n                        }\n                        onClick={(e) => {\n                          this.setState({ beginner: \"AGENT\" });\n                          this.props.handleStartAgent_Nine(e);\n                        }}\n                      ></i>\n                      <h5 className={configStyles.playerName}>AGENT</h5>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col\n                    sm={12}\n                    md={12}\n                    lg={6}\n                    className=\"justify-content-center align-self-center\"\n                  >\n                    <img\n                      // className={rulesStyles.gifs}\n                      className={configStyles.ruleimg}\n                      src={require(\"../static/assets/nine-final3.gif\")}\n                    />\n                  </Col>\n                  <Col\n                    sm={12}\n                    md={12}\n                    lg={6}\n                    className=\"justify-content-center align-self-center\"\n                  >\n                    <p\n                      className={configStyles.rulestext}\n                      style={{ textAlign: \"left\" }}\n                    >\n                      <strong style={{ fontSize: \"2vh\" }}>Quick Rules :</strong>\n                      <li>\n                        If your opponent places their move in a cell of a small\n                        board - <u>inner numbering</u>, your next move must be\n                        placed in any cell in the small board -{\" \"}\n                        <u>outer numbering</u> with the same row and column\n                        number as the cell that your opponent placed it in.\n                      </li>\n                      <br />\n                      <li>\n                        In case the small board already has a win or a tie\n                        condition, then the player can place their symbol in any\n                        of the empty cells across all the 9 small boards.\n                      </li>\n                    </p>\n                  </Col>\n                </Row>\n                <div>\n                  <>\n                    {this.props.gameBeginner != \" \" ? (\n                      <Button\n                        size=\"md\"\n                        variant=\"light\"\n                        onClick={(e) => {\n                          this.playAudio(\"audio-element-play\");\n                          this.props.update_Nine(\"Go To Game\");\n                        }}\n                      >\n                        Let's Play!\n                      </Button>\n                    ) : (\n                      <Button size=\"md\" variant=\"light\" disabled>\n                        Let's Play!\n                      </Button>\n                    )}\n                  </>\n                </div>\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n        <audio className=\"audio-element-play\">\n          <source src={play_game_sound}></source>\n        </audio>\n      </div>\n    );\n  }\n}\n\nconst iconStyles = {\n  color: \"#FF7885\",\n};\n","import React, { Component } from \"react\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nimport NineBoard from \"./nineBoard.js\";\nimport NineConfiguration from \"./nineConfiguration.js\";\nimport GameResults from \"./gameResults.js\";\n\nexport default class ThreeGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNineConfigurationComponent: true,\n      showNineGameComponent: false,\n      showNineWinComponent: false,\n      gameBeginner: \"HUMAN\",\n      route: \" \",\n      winner: \" \",\n    };\n\n    this.updateStateOfComponents_Nine = this.updateStateOfComponents_Nine.bind(\n      this\n    );\n    this.updateStateForWinComponent = this.updateStateForWinComponent.bind(\n      this\n    );\n    this.handleStartAgent_Nine = this.handleStartAgent_Nine.bind(this);\n    this.handleStartHuman_Nine = this.handleStartHuman_Nine.bind(this);\n  }\n\n  updateStateForWinComponent(gameRoute, gameWinner) { //to hide the  9*9 game component and display the win component\n    setTimeout(\n      () =>\n        this.setState({\n          showNineConfigurationComponent: false,\n          showNineGameComponent: false,\n          showNineWinComponent: true,\n          winner: gameWinner,\n          route: gameRoute,\n        }),\n      2000\n    );\n  }\n\n  handleStartAgent_Nine(e) {\n    this.setState({\n      gameBeginner: \"AGENT\",\n    });\n  }\n\n  handleStartHuman_Nine(e) {\n    this.setState({\n      gameBeginner: \"HUMAN\",\n    });\n  }\n\n  updateStateOfComponents_Nine(message) { //to display the 9*9 game component and hide the configuration component\n    if (message === \"Go To Game\") {\n      this.setState({\n        showNineConfigurationComponent: false,\n        showNineGameComponent: true,\n        showNineWinComponent: false,\n      });\n    } else if (message === \"Show Configuration\") {\n\n      this.setState({\n        showNineConfigurationComponent: true,\n        showNineGameComponent: false,\n        showNineWinComponent: false,\n        gameBeginner: \"HUMAN\",\n        route: \" \",\n        winner: \" \",\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.showNineConfigurationComponent && (\n          <NineConfiguration\n            update_Nine={this.updateStateOfComponents_Nine}\n            handleStartAgent_Nine={this.handleStartAgent_Nine}\n            handleStartHuman_Nine={this.handleStartHuman_Nine}\n            gameBeginner={this.state.gameBeginner}\n          />\n        )}\n        {this.state.showNineGameComponent && (\n          <NineBoard\n            update_Win_Nine={this.updateStateForWinComponent}\n            gameBeginner={this.state.gameBeginner}\n          />\n        )}\n        {this.state.showNineWinComponent && (\n          <GameResults\n            update_Nine={this.updateStateOfComponents_Nine}\n            winner={this.state.winner}\n            route={this.state.route}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Container, Table } from \"react-bootstrap\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport styles from \"../static/css/scores.module.css\";\n\nexport default class Scores extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scores: [],\n    };\n  }\n\n  componentDidMount() {\n    let history = localStorage.getItem(\"scores\");\n    if (history) {\n      let oldScores = JSON.parse(history) || [];\n      this.setState({\n        scores: oldScores,\n      });\n    }\n  }\n\n  clearScores() {\n    localStorage.setItem(\"scores\", []);\n    this.setState({\n      scores: [],\n    });\n  }\n  render() {\n    return (\n      <div className={styles.landingBody}>\n        <Container className={styles.content}>\n          <h1 className={styles.heading}>Previous Scores</h1>\n          {this.state.scores.length == 0 ? (\n            \"You have not played any games yet!\"\n          ) : (\n            <div>\n              <Button\n                variant=\"dark\"\n                className={styles.button}\n                onClick={(e) => this.clearScores()}\n              >\n                Clear Scores\n              </Button>\n              <Table striped bordered hover className={styles.table}>\n                <thead>\n                  <tr>\n                    <th className={styles.topics}>#</th>\n                    <th className={styles.topics}>GAME TYPE</th>\n                    <th className={styles.topics}>LEVEL</th>\n                    <th className={styles.topics}>RESULT</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.scores.map((score, i) => (\n                    <tr className={styles.row}>\n                      <td>{i + 1}</td>\n                      <td>{score.game}</td>\n                      <td>{score.depth == -1 ? 5 : score.depth}</td>\n                      <td>{score.winner}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </div>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n","// import logo from './logo.svg';\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landing from \"./components/Landing\";\nimport Error from \"./components/Error\";\nimport { Navbar, Nav} from \"react-bootstrap\";\nimport Overview from \"./components/Overview\";\nimport Rules from \"./components/Rules\";\nimport Message from \"./components/Message\";\nimport ThreeGame from \"./components/threeGame\";\nimport NineGame from \"./components/nineGame\";\nimport Scores from \"./components/Scores\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listener = null;\n    this.state = {\n      status: \"top\",\n    };\n  }\n\n  componentDidMount() {\n    this.listener = document.addEventListener(\"scroll\", (e) => {\n      var scrolled = document.scrollingElement.scrollTop;\n      if (scrolled >= 120) {\n        if (this.state.status !== \"nav\") {\n          this.setState({ status: \"nav\" });\n        }\n      } else {\n        if (this.state.status !== \"top\") {\n          this.setState({ status: \"top\" });\n        }\n      }\n    });\n  }\n  componentDidUpdate() {\n    document.removeEventListener(\"scroll\", this.listener);\n  }\n  render() {\n    return (\n      <Navbar expand=\"lg\" style={navstyles} variant=\"dark\">\n        <Navbar.Brand href=\"/\">Red Ninjas</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/three\">3x3</Nav.Link>\n            <Nav.Link href=\"/nine\">9x9</Nav.Link>\n            <Nav.Link href=\"/rules\">Rule Book</Nav.Link>\n            <Nav.Link href=\"/overview\">About</Nav.Link>\n            <Nav.Link href=\"/scores\">Past Scores</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/three\" component={ThreeGame} />\n          <Route exact path=\"/nine\" component={NineGame} />\n\n          {/* <Route exact path='/win_player_three' component={WinHumanThree} /> */}\n          {/* <Route exact path='/lose_player_three' component={WinAgentThree} /> */}\n\n          {/* <Route exact path='/win_player_nine' component={WinHumanNine} /> */}\n          {/* <Route exact path='/lose_player_nine' component={WinAgentNine} /> */}\n          {/* <Route exact path='/config' component={Config} /> */}\n          {/* <Route exact path='/Result' component={Result} /> */}\n          <Route exact path=\"/overview\" component={Overview} />\n          <Route exact path=\"/rules\" component={Rules} />\n          <Route exact path=\"/message\" component={Message} />\n          <Route exact path=\"/scores\" component={Scores} />\n          <Route path=\"*\" exact={true} component={Error} />\n        </Switch>\n      </Router>\n      <NavigationBar />\n    </div>\n  );\n}\n\nexport default App;\n\nconst navstyles = {\n  backgroundColor: \"#3b3251\",\n  position: \"fixed\",\n  top: \"0%\",\n  overflow: \"hidden\",\n  width: \"100%\",\n  zIndex: \"9999999 !important\",\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"result_wrapper__3jrLn\",\"mainDiv\":\"result_mainDiv__2J2tX\",\"containerBody\":\"result_containerBody__Tf0Np\",\"gif\":\"result_gif__30rHW\",\"text\":\"result_text__3mZBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Rules_contentContainer__2KO5f\",\"content\":\"Rules_content__247op\",\"landingBody\":\"Rules_landingBody__2wFJJ\",\"heading\":\"Rules_heading__8s0bV\",\"subheading\":\"Rules_subheading__nuxw1\",\"rowstyles\":\"Rules_rowstyles__37Z0a\",\"gifs\":\"Rules_gifs__1sJH9\",\"text\":\"Rules_text__Nar3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingBody\":\"scores_landingBody__JM8Rf\",\"content\":\"scores_content__3ZFFL\",\"heading\":\"scores_heading__1K9UW\",\"table\":\"scores_table__3lQ8X\",\"topics\":\"scores_topics__1vntC\",\"row\":\"scores_row__gaX2X\",\"button\":\"scores_button__2xj5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"message_box__2RXEq\",\"box1\":\"message_box1__3riNv\",\"text\":\"message_text__1LEV2\",\"bodytext\":\"message_bodytext__10vlI\",\"bodytext1\":\"message_bodytext1__gbz81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingBody\":\"board_landingBody__1oE3W\",\"cellThree\":\"board_cellThree__3lv1K\",\"cellNine\":\"board_cellNine__3jxyc\",\"iconThree\":\"board_iconThree__uBv8I\",\"iconNine\":\"board_iconNine__OWylL\",\"heading\":\"board_heading__3xlN5\",\"boardInfo\":\"board_boardInfo__29XNr\",\"button\":\"board_button__2kerc\",\"lightHeading\":\"board_lightHeading__1EdB3\",\"highlightButton\":\"board_highlightButton__1HSah\",\"undo\":\"board_undo__3h7JX\",\"lightUndo\":\"board_lightUndo__7XhcL\",\"center\":\"board_center__37uiP\",\"whiteBg\":\"board_whiteBg__2ESyA\",\"greyCell\":\"board_greyCell__19N9U\",\"highlighted\":\"board_highlighted__Q1dwa\",\"nineHeading\":\"board_nineHeading__3IquP\",\"title\":\"board_title__2yjm7\",\"nineBoardInfo\":\"board_nineBoardInfo__1Rt5j\",\"nineSpinner\":\"board_nineSpinner__1Jw0k\",\"iconAgent\":\"board_iconAgent__2gRjs\",\"darkCell\":\"board_darkCell__1cetB\",\"lightCell\":\"board_lightCell__3wA7H\",\"board\":\"board_board__vAiuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Landing_content__1ob_o\",\"landingBody\":\"Landing_landingBody__2x6EC\",\"heading\":\"Landing_heading__3u5VM\",\"subheading\":\"Landing_subheading__25-7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"error_content__1OBmn\",\"landingBody\":\"error_landingBody__7l3fL\",\"heading\":\"error_heading__2QwLI\",\"button\":\"error_button__2nVoA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Overview_contentContainer__2O0uD\",\"content\":\"Overview_content__2hfdA\",\"landingBody\":\"Overview_landingBody__1vtBd\",\"heading\":\"Overview_heading__j1Sea\",\"subheading\":\"Overview_subheading__392dG\",\"rowstyles\":\"Overview_rowstyles__1N4I8\",\"gifs\":\"Overview_gifs__1GfCt\",\"text\":\"Overview_text__3e0o7\"};","module.exports = __webpack_public_path__ + \"static/media/nine-final3.8a7c241e.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Config-mallika_wrapper__25xFN\",\"selectedButton\":\"Config-mallika_selectedButton__3sJtk\",\"mainDiv\":\"Config-mallika_mainDiv__11Zz9\",\"containerBody\":\"Config-mallika_containerBody__1PtKZ\",\"btn-primary\":\"Config-mallika_btn-primary__3HF4d\",\"heading\":\"Config-mallika_heading__3fQJt\",\"startContent\":\"Config-mallika_startContent__3m-kf\",\"playerName\":\"Config-mallika_playerName__2ve-8\",\"iconStyles\":\"Config-mallika_iconStyles__1qerZ\",\"iconSelect\":\"Config-mallika_iconSelect__3DULo\",\"icon\":\"Config-mallika_icon__XpXFV\",\"rulestext\":\"Config-mallika_rulestext__8FDB2\",\"ruleimg\":\"Config-mallika_ruleimg__2LzyM\",\"subheading\":\"Config-mallika_subheading__v4DmU\",\"text\":\"Config-mallika_text__1t1h0\",\"gif\":\"Config-mallika_gif__2fH7u\"};","module.exports = __webpack_public_path__ + \"static/media/start-game.eba816ab.mp3\";","module.exports = __webpack_public_path__ + \"static/media/place-icon.827b0749.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lets-play.69d512d0.mp3\";"],"sourceRoot":""}