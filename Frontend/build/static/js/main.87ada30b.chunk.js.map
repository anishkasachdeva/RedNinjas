{"version":3,"sources":["static/css/Three.module.css","components/Board.js","components/BigBoard.js","components/GameStarter.js","components/Landing.js","App.js","serviceWorker.js","index.js","static/css/Landing.module.css","static/css/Common.module.css","static/css/board.module.css"],"names":["module","exports","Landing","props","handleCellClick","e","cell","state","startGameValue","win","turn","undoStack","push","copy_board","board","slice","Math","floor","setState","copy_board2","check_win","console","log","axios","get","params","gameBeginner","JSON","stringify","depth","then","res","data","r","c","startGameButton","copy_board3","catch","err","handleStartHuman","handleStartAgent","handleStartGame","startGame","whoPlaysFirstDialog","handleUndoFeature","index","copy_undoStack","totalOfUndoButtons","length","buttonsToErase","i","pop","handleDepth","depth_selected","show_3x3_BoardComponent","symbol","X","style","textAlign","className","styles","centerDiv","iconThree","O","WA","WH","this","marginTop","margin","maxWidth","heading","Container","fluid","map","row","Row","j","Col","md","cellThree","onClick","Button","variant","size","startButton","ButtonGroup","aria-label","Component","display","width","lineHeight","BigBoard","outerRow","outerColumn","innerRow","innerColumn","ultimateWin","copy_bigBoard1","bigboard","moveNumber","checkValidityOfMove","copy_bigBoard2","checkPartialWin","checkboard","ultimateWinBoard","previous_move","copy_board1","rowToPlace","columnToPlace","outer_row","outer_column","inner_row","inner_column","show_9x9_BoardComponent","iconNine","LA","LH","winner_symbol","winner_status","loser_symbol","loser_status","win_row","copy_bigBoard","win_column","alterBigBoardRow","alterBigBoardColumn","alterBigBoardLeftDiagonal","alterBigBoardRightDiagonal","bigBoard","copyUltimateWinBoard_1","copyUltimateWinBoard_2","check_ultimate_win","place_partial","column","cellStyle1","cellStyle3","cellStyle2","cellNine","backgroundColor","border","padding","flexBasis","flexGrow","minWidth","height","landingBody","content","subheading","to","App","exact","path","component","Board","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.87ada30b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Three_content__2bm6m\",\"landingBody\":\"Three_landingBody__3hVQb\",\"heading\":\"Three_heading__23jpG\",\"subheading\":\"Three_subheading__hsFUy\"};","import React, { Component, useEffect } from \"react\";\nimport styles from '../static/css/board.module.css';\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n} from \"mdbreact\";\nimport {\n  MDBRow,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCol,\n  MDBIcon,\n} from \"mdbreact\";\n// import { Link } from 'react-router-dom'\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\nimport axios from \"axios\";\n// import Sky from 'react-sky';\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport stylesThree from \"../static/css/Three.module.css\";\nimport common from \"../static/css/Common.module.css\";\n\nexport default class Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show_3x3_BoardComponent: this.props.show_3x3_BoardComponent,\n      board: [\n        [\" \", \" \", \" \"],\n        [\" \", \" \", \" \"],\n        [\" \", \" \", \" \"],\n      ],\n      // chosenCell: \" \",\n      gameBeginner: \" \",\n      startGameValue: false,\n      whoPlaysFirstDialog: false,\n      startGameButton: \"Start Game\",\n      turn: \" \",\n      symbol: {\n        X: (\n          <div style={{ textAlign: \"center\" }} className={styles.centerDiv}>\n            <i className={'fas fa-user-astronaut orange-text mr-2 ' + styles.iconThree}></i>\n          </div>\n        ),\n        O: (\n          <div style={{ textAlign: \"center\" }}>\n            <i className={'fas fa-robot orange-text mr-2 ' + styles.iconThree}></i>\n          </div>\n        ),\n        WA: (\n          <div style={{ textAlign: \"center\" }}>\n            <i className={'fas fa-robot light-green-text fa-spin mr-2 ' + styles.iconThree}></i>\n          </div>\n        ),\n        WH: (\n          <div style={{ textAlign: \"center\" }}>\n            <i className={'fas fa-user-astronaut light-green-text fa-spin mr-2 ' + styles.iconThree}></i>\n          </div>\n        ),\n      },\n      win: false,\n      depth: \" \",\n      undoStack: [],\n    };\n  }\n\n  // pop()  {\n  //     // return top most element in the stack\n  //     // and removes it from the stack\n  //     // Underflow if stack is empty\n  //     if (this.state.data.length == 0) {\n  //         return \"Underflow\";\n  //     } else {\n  //     return this.state.data.pop();\n  //     }\n  // }\n\n  //     top () {\n  //       return this.data.length;\n  //     }\n\n  //     push (...element) {\n  //         for (var i of element) {\n  //             return this.state.data.push(i)\n  //         }\n  //     }\n\n  // // peek() method looks at the object at the top of this stack\n  // // without removing it from the stack.\n  // // The stack is not modified (it does not remove the element;\n  // // it only returns the element for information purposes).\n\n  //     peek () {\n  //         return this.state.data[this.state.data.length - 1];\n  //     }\n\n  //     clear () {\n  //         return this.state.data = [];\n  //     }\n\n  //     length(){\n  //         // console.log(this.state.data.length)\n  //       return this.state.data.length;\n  //   }\n\n  //     search (value) {\n  //         for (let i = 0; i < this.state.data.length; i++) {\n  //             if (this.state.data[i] === value) {\n  //                 return value;\n  //             } else {\n  //                 return false;\n  //             }\n  //         }\n  //     }\n\n  check_win(copy_board) {\n    for (let i = 0; i < 3; i++) {\n      if (\n        copy_board[i][0] === copy_board[i][1] &&\n        copy_board[i][0] === copy_board[i][2] &&\n        copy_board[i][1] === copy_board[i][2] &&\n        copy_board[i][0] !== \" \"\n      ) {\n        if (copy_board[i][0] === \"O\") {\n          copy_board[i][0] = \"WA\";\n          copy_board[i][1] = \"WA\";\n          copy_board[i][2] = \"WA\";\n        } else if (copy_board[i][0] === \"X\") {\n          copy_board[i][0] = \"WH\";\n          copy_board[i][1] = \"WH\";\n          copy_board[i][2] = \"WH\";\n        }\n        this.setState({\n          win: true,\n        });\n      }\n    }\n    for (let i = 0; i < 3; i++) {\n      if (\n        copy_board[0][i] === copy_board[1][i] &&\n        copy_board[0][i] === copy_board[2][i] &&\n        copy_board[1][i] === copy_board[2][i] &&\n        copy_board[0][i] !== \" \"\n      ) {\n        if (copy_board[0][i] === \"O\") {\n          copy_board[0][i] = \"WA\";\n          copy_board[1][i] = \"WA\";\n          copy_board[2][i] = \"WA\";\n        } else if (copy_board[0][i] === \"X\") {\n          copy_board[0][i] = \"WH\";\n          copy_board[1][i] = \"WH\";\n          copy_board[2][i] = \"WH\";\n        }\n        this.setState({\n          win: true,\n        });\n      }\n    }\n\n    if (\n      copy_board[0][0] === copy_board[1][1] &&\n      copy_board[0][0] === copy_board[2][2] &&\n      copy_board[1][1] === copy_board[2][2] &&\n      copy_board[0][0] !== \" \"\n    ) {\n      if (copy_board[0][0] === \"O\") {\n        copy_board[0][0] = \"WA\";\n        copy_board[1][1] = \"WA\";\n        copy_board[2][2] = \"WA\";\n      } else if (copy_board[0][0] === \"X\") {\n        copy_board[0][0] = \"WH\";\n        copy_board[1][1] = \"WH\";\n        copy_board[2][2] = \"WH\";\n      }\n      this.setState({\n        win: true,\n      });\n    }\n\n    if (\n      copy_board[0][2] === copy_board[1][1] &&\n      copy_board[0][2] === copy_board[2][0] &&\n      copy_board[1][1] === copy_board[2][0] &&\n      copy_board[0][2] !== \" \"\n    ) {\n      if (copy_board[0][2] === \"O\") {\n        copy_board[0][2] = \"WA\";\n        copy_board[1][1] = \"WA\";\n        copy_board[2][0] = \"WA\";\n      } else if (copy_board[0][2] === \"X\") {\n        copy_board[0][2] = \"WH\";\n        copy_board[1][1] = \"WH\";\n        copy_board[2][0] = \"WH\";\n      }\n      this.setState({\n        win: true,\n      });\n    }\n  }\n\n  handleCellClick = (e, cell) => {\n    if (this.state.startGameValue && this.state.win === false && this.state.turn === \"HUMAN\") {\n      this.state.undoStack.push(cell);\n      let copy_board = this.state.board.slice();\n      if (copy_board[Math.floor(cell / 3)][cell % 3] === \" \") {\n        copy_board[Math.floor(cell / 3)][cell % 3] = \"X\";\n      }\n      this.setState({\n        board: copy_board,\n        turn: \"AGENT\"\n      });\n      // console.log('hjfhhdhf')\n\n      let copy_board2 = this.state.board.slice();\n      this.check_win(copy_board2);\n\n      // this.setState({\n      // board: copy_board,\n      // });\n\n      // const sendData = {\n      //   gameBeginner: this.state.gameBeginner,\n      //   board: JSON.stringify(this.state.board),\n      //   depth: JSON.stringify(this.state.depth),\n      // }\n\n      // useEffect(()=> {\n      //     fetch(\"/agent\").then(response =>\n      //         response.json().then(data => {\n      //             console.log(data)\n      //         }))\n      // },[])\n      // console.log(sendData)\n      console.log(this.state.win)\n\n      // console.log(JSON.stringify(this.state.board))\n      if (this.state.win === false) {\n        axios\n        .get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn\", {\n          params: {\n            gameBeginner: this.state.gameBeginner,\n            board: JSON.stringify(this.state.board),\n            depth: JSON.stringify(this.state.depth)\n          },\n        }) //route to be filled according to flask route name\n        .then((res) => {\n\n          let copy_board = this.state.board.slice();\n          // console.log(res.status)\n          // console.log(res)\n          // console.log(copy_board)\n\n          copy_board[res.data.r][res.data.c] = \"O\"       /////// will uncomment when backend and frontend are bound together because for now this will give error\n          this.state.undoStack.push(3 * res.data.r + res.data.c)\n\n          // console.log(this.state.startGameButton)\n          if(this.state.startGameButton === \"Reset Game\")\n          {\n              this.setState({\n                  board : copy_board,\n                  turn : \"HUMAN\"\n              })\n              let copy_board3 = this.state.board.slice();\n              this.check_win(copy_board3);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    }\n  };\n\n\n\n  handleStartHuman = (e) => {\n    console.log(\"Human begins the game!\");\n    this.setState({\n      gameBeginner: \"HUMAN\",\n      turn: \"HUMAN\"\n    });\n  };\n\n\n\n  handleStartAgent = (e) => {\n    console.log(\"Agent begins the game!\");\n    this.setState({\n      gameBeginner: \"AGENT\",\n      turn: \" \"\n    });\n  };\n\n\n\n  handleStartGame = (e, startGame) => {\n    console.log(\"The game begins!\");\n    // console.log(this.state.gameBeginner)\n\n    if (startGame === \"Start Game\") {\n      this.setState({\n        startGameButton: \"Reset Game\",\n        startGameValue: true,\n      });\n    }\n    else if (startGame === \"Reset Game\") {\n\n      this.setState({\n        board: [\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n          [\" \", \" \", \" \"],\n        ],\n        gameBeginner: \" \",\n        startGameValue: false,\n        whoPlaysFirstDialog: false,\n        startGameButton: \"Start Game\",\n        win: false,\n        depth: \" \",\n        undoStack: [],\n        turn: \" \",\n      });\n    }\n    if (this.state.gameBeginner === \"AGENT\") {\n      axios\n        .get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn\", {\n          params: {\n            gameBeginner: this.state.gameBeginner,\n            board: JSON.stringify(this.state.board),\n            depth: JSON.stringify(this.state.depth)\n          },\n        }) //route to be filled according to flask route name\n        .then((res) => {\n\n          let copy_board = this.state.board.slice();\n\n          copy_board[res.data.r][res.data.c] = \"O\"       /////// will uncomment when backend and frontend are bound together because for now this will give error\n          this.state.undoStack.push(3 * res.data.r + res.data.c)\n          if(this.state.startGameButton === \"Reset Game\")\n          {\n            this.setState({\n              board : copy_board,\n              turn : \"HUMAN\",\n              })\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  handleUndoFeature = (e, index, cell) => {\n    let copy_board = this.state.board.slice();\n    let copy_undoStack = this.state.undoStack.slice();\n\n    let totalOfUndoButtons = copy_undoStack.length;\n    let buttonsToErase = totalOfUndoButtons - (index + 1);\n    console.log(totalOfUndoButtons);\n    console.log(buttonsToErase);\n\n    for (let i = 0; i <= buttonsToErase; i++) {\n      copy_board[Math.floor(copy_undoStack[copy_undoStack.length - 1] / 3)][\n        copy_undoStack[copy_undoStack.length - 1] % 3\n      ] = \" \";\n      copy_undoStack.pop();\n    }\n    this.setState({\n      board: copy_board,\n      undoStack: copy_undoStack,\n    });\n\n  };\n\n  handleDepth = (e, depth_selected) => {\n\n    if (this.state.depth === \" \") {\n\n      this.setState({\n        depth: depth_selected\n      });\n\n    }\n  };\n\n  render() {\n    return (\n\n      <div\n        style={{\n          marginTop: \"5%\",\n          margin: \"0 auto\",\n          maxWidth: \"90%\"\n        }}\n        // className={stylesThree.landingBody}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <h1 style={heading}>RED NINJA TIC TAC TOE</h1>\n        </div>\n        <Container>\n          <Container fluid=\"true\">\n            {this.state.board.map((row, i) => (\n              <Row>\n                {row.map((cell, j) => (\n                  <Col\n                    md\n                    className={styles.cellThree}\n                    onClick={(e) => this.handleCellClick(e, 3 * i + j)}\n                  >\n                    {this.state.symbol[this.state.board[i][j]]}\n                  </Col>\n                ))}\n              </Row>\n            ))}\n          </Container>\n        </Container>\n\n        <Container fluid=\"true\">\n          {this.state.undoStack.map((cell, i) => (\n            <Button onClick={(e) => this.handleUndoFeature(e, i, cell)}>\n              {i + 1}\n            </Button>\n          ))}\n        </Container>\n\n        <div style={{}}>\n          <Button\n            variant=\"info\"\n            size=\"lg\"\n            style={{ startButton }}\n            onClick={(e) => this.handleStartGame(e, this.state.startGameButton)}\n          >\n            {this.state.startGameButton}\n          </Button>{\" \"}\n        </div>\n\n        <Button variant=\"default\" onClick={(e) => this.handleStartHuman(e)}>\n          Beginner_Human\n        </Button>\n\n\n        <Button variant=\"default\" onClick={(e) => this.handleStartAgent(e)}>\n          Beginner_Agent\n        </Button>\n\n        <ButtonGroup aria-label=\"Basic example\">\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e, 1)}>\n            Depth 1\n          </Button>\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e, 2)}>\n            Depth 2\n          </Button>\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e, 3)}>\n            Depth 3\n          </Button>\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e, 4)}>\n            Depth 4\n          </Button>\n          <Button variant=\"default\" onClick={(e) => this.handleDepth(e, -1)}>\n            Ultimate\n          </Button>\n        </ButtonGroup>\n\n        {/* <i class=\"fas fa-space-shuttle fa-6x orange-text mr-2\"></i> */}\n        {/* <i class=\"fas fa-rocket fa-6x orange-text mr-2\"></i> */}\n      </div>\n    );\n  }\n}\n\n// var stack = new Landing();\n\n\n//   border-collapse: \"separate\"\n// }\nconst heading = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: \"80%\",\n  lineHeight: 1.5,\n};\n\nconst startButton = {\n  // position: 'absolute',\n  // bottom:0,\n  // right : 0\n  // left:50\n};\n\n// const cellStyle = {\n\n// }\n// \"proxy\": \"http://127.0.0.1:5000/\"\n","import React, { Component, useEffect } from 'react'\nimport styles from '../static/css/board.module.css'\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse } from \"mdbreact\";\nimport { MDBRow, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCol, MDBIcon } from \"mdbreact\";\n// import { Link } from 'react-router-dom'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport { Button, Container, Col, Row } from 'react-bootstrap'\nimport axios from 'axios';\n// import Sky from 'react-sky';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\n\n\nexport default class BigBoard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            show_9x9_BoardComponent: this.props.show_9x9_BoardComponent,\n            startGameButton: \"Start Game\",\n            turn: \" \",\n            startGameValue: false,\n            ultimateWin: false,\n            gameBeginner: \" \",\n            rowToPlace: \" \",\n            columnToPlace: \" \",\n            moveNumber: 1,\n            ultimateWinBoard: [\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n            ],\n            bigboard: [\n\n                [[[\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"]],\n\n                [[\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"]],\n\n                [[\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"]]],\n\n                [[[\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"]],\n\n                [[\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"]],\n\n                [[\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"]]],\n\n                [[[\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"]],\n\n                [[\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"]],\n\n                [[\" \", \" \", \" \"],\n                [\" \", \" \", \" \"],\n                [\" \", \" \", \" \"]]]\n\n            ],\n\n            symbol: {\n                X: <div style={{ textAlign: \"center\" }}>\n                    <i className={'fas fa-grin amber-text ' + styles.iconNine}></i>\n\n                    {/* <i class=\"fas fa-times fa-2x amber-text mr-2\"></i> */}\n                    {/* <i class=\"far fa-grin fa-3x amber-text mr-2\"></i> */}\n                </div>,\n                O: <div style={{ textAlign: \"center\" }}>\n                    <i className={\"far fa-grin pink-text \" + styles.iconNine}></i>\n\n                    {/* <i class=\"far fa-circle fa-2x pink-text mr-2\"></i> */}\n                    {/* <i class=\"fas fa-grin fa-3x pink-text mr-2\"></i> */}\n                </div>,\n                WA: <div style={{ textAlign: \"center\" }}>\n                    <i className={\"fas fa-laugh-wink amber-text \" + styles.iconNine}></i>\n\n                    {/* <i class=\"fas fa-times fa-2x amber-text mr-2\"></i> */}\n                    {/* <i class=\"fas fa-robot fa-2x light-green-text mr-2\"></i> */}\n                </div>,\n                WH: <div style={{ textAlign: \"center\" }}>\n                    <i className={\"far fa-laugh-wink pink-text \" + styles.iconNine}></i>\n\n                    {/* <i class=\"fas fa-user-astronaut fa-2x green-text mr-2\"></i> */}\n                    {/* <i class=\"far fa-circle fa-2x pink-text mr-2\"></i> */}\n                </div>,\n                LA: <div style={{ textAlign: \"center\" }}>\n                    <i className={\"fas fa-sad-cry amber-text \" + styles.iconNine}></i>\n\n                    {/* <i class=\"fas fa-times fa-2x amber-text mr-2\"></i> */}\n                    {/* <i class=\"fas fa-robot fa-2x light-green-text mr-2\"></i> */}\n                </div>,\n                LH: <div style={{ textAlign: \"center\" }}>\n                    <i className={\"far fa-sad-cry pink-text \" + styles.iconNine}></i>\n\n                    {/* <i class=\"fas fa-user-astronaut fa-2x green-text mr-2\"></i> */}\n                    {/* <i class=\"far fa-circle fa-2x pink-text mr-2\"></i> */}\n                </div>\n            }\n        }\n    }\n\n    alterBigBoardRow(winner_symbol, winner_status, loser_symbol, loser_status, win_row) {\n        let copy_bigBoard = this.state.bigboard.slice()\n        for (let outer_row = 0; outer_row < 3; outer_row++) {\n            for (let outer_column = 0; outer_column < 3; outer_column++) {\n                for (let inner_row = 0; inner_row < 3; inner_row++) {\n                    for (let inner_column = 0; inner_column < 3; inner_column++) {\n                        if (outer_row === win_row) {\n                            copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                        }\n                        else {\n                            if (copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === winner_symbol) {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                            }\n                            else if (copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === loser_symbol) {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = loser_status\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.setState({\n            // ultimateWin : true,\n            bigboard: copy_bigBoard\n        })\n    }\n\n    alterBigBoardColumn(winner_symbol, winner_status, loser_symbol, loser_status, win_column) {\n        let copy_bigBoard = this.state.bigboard.slice()\n\n        for (let outer_row = 0; outer_row < 3; outer_row++) {\n            for (let outer_column = 0; outer_column < 3; outer_column++) {\n                for (let inner_row = 0; inner_row < 3; inner_row++) {\n                    for (let inner_column = 0; inner_column < 3; inner_column++) {\n                        if (outer_column === win_column) {\n                            copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                        }\n                        else {\n                            if (copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === winner_symbol) {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                            }\n                            else if (copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === loser_symbol) {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = loser_status\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.setState({\n            // ultimateWin : true,\n            bigboard: copy_bigBoard\n        })\n    }\n\n    alterBigBoardLeftDiagonal(winner_symbol, winner_status, loser_symbol, loser_status) {\n        let copy_bigBoard = this.state.bigboard.slice()\n\n        for (let outer_row = 0; outer_row < 3; outer_row++) {\n            for (let outer_column = 0; outer_column < 3; outer_column++) {\n                for (let inner_row = 0; inner_row < 3; inner_row++) {\n                    for (let inner_column = 0; inner_column < 3; inner_column++) {\n                        if ((outer_row === 0 && outer_column === 0) || (outer_row === 1 && outer_column === 1) || (outer_row === 2 && outer_column === 2)) {\n                            copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                        }\n                        else {\n                            if (copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === winner_symbol) {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                            }\n                            else if (copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === loser_symbol) {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = loser_status\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.setState({\n            // ultimateWin : true,\n            bigboard: copy_bigBoard\n        })\n    }\n\n    alterBigBoardRightDiagonal(winner_symbol, winner_status, loser_symbol, loser_status) {\n        let copy_bigBoard = this.state.bigboard.slice()\n        for (let outer_row = 0; outer_row < 3; outer_row++) {\n            for (let outer_column = 0; outer_column < 3; outer_column++) {\n                for (let inner_row = 0; inner_row < 3; inner_row++) {\n                    for (let inner_column = 0; inner_column < 3; inner_column++) {\n                        if ((outer_row === 0 && outer_column === 2) || (outer_row === 1 && outer_column === 1) || (outer_row === 2 && outer_column === 0)) {\n                            copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                        }\n                        else {\n                            if (copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === winner_symbol) {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = winner_status\n                            }\n                            else if (copy_bigBoard[outer_row][outer_column][inner_row][inner_column] === loser_symbol) {\n                                copy_bigBoard[outer_row][outer_column][inner_row][inner_column] = loser_status\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.setState({\n            // ultimateWin : true,\n            bigboard: copy_bigBoard\n        })\n    }\n\n\n\n\n\n    check_ultimate_win(copy_board) {\n        // let copy_bigBoard = this.state.bigboard.slice()\n\n        if (this.state.ultimateWin === false) {\n            for (let i = 0; i < 3; i++) { //for row\n                if (\n                    copy_board[i][0] === copy_board[i][1] &&\n                    copy_board[i][0] === copy_board[i][2] &&\n                    copy_board[i][1] === copy_board[i][2] &&\n                    copy_board[i][0] !== \" \"\n                ) {\n                    if (copy_board[i][0] === \"O\") {\n\n                        this.alterBigBoardRow(\"O\", \"WH\", \"X\", \"LA\", i)\n\n                    } else if (copy_board[i][0] === \"X\") {\n                        this.alterBigBoardRow(\"X\", \"WA\", \"O\", \"LH\", i)\n                    }\n                    this.setState({\n                        ultimateWin: true,\n                        ultimateWinBoard: copy_board\n                    });\n                }\n            }\n\n        }\n\n        if (this.state.ultimateWin === false) {\n            for (let i = 0; i < 3; i++) { // for column\n                if (\n                    copy_board[0][i] === copy_board[1][i] &&\n                    copy_board[0][i] === copy_board[2][i] &&\n                    copy_board[1][i] === copy_board[2][i] &&\n                    copy_board[0][i] !== \" \"\n                ) {\n                    if (copy_board[0][i] === \"O\") {\n                        this.alterBigBoardColumn(\"O\", \"WH\", \"X\", \"LA\", i)\n                    } else if (copy_board[0][i] === \"X\") {\n                        this.alterBigBoardColumn(\"X\", \"WA\", \"O\", \"LH\", i)\n\n                    }\n                    this.setState({\n                        ultimateWin: true,\n                        ultimateWinBoard: copy_board\n                    });\n                }\n            }\n        }\n\n        if (this.state.ultimateWin === false) {\n            if (\n                copy_board[0][0] === copy_board[1][1] &&\n                copy_board[0][0] === copy_board[2][2] &&\n                copy_board[1][1] === copy_board[2][2] &&\n                copy_board[0][0] !== \" \"\n            ) {\n                if (copy_board[0][0] === \"O\") {\n                    this.alterBigBoardLeftDiagonal(\"O\", \"WH\", \"X\", \"LA\")\n                } else if (copy_board[0][0] === \"X\") {\n                    this.alterBigBoardLeftDiagonal(\"X\", \"WA\", \"O\", \"LH\")\n                }\n                this.setState({\n                    ultimateWin: true,\n                    ultimateWinBoard: copy_board\n                });\n            }\n        }\n\n        if (this.state.ultimateWin === false) {\n            if (\n                copy_board[0][2] === copy_board[1][1] &&\n                copy_board[0][2] === copy_board[2][0] &&\n                copy_board[1][1] === copy_board[2][0] &&\n                copy_board[0][2] !== \" \"\n            ) {\n                if (copy_board[0][2] === \"O\") {\n                    this.alterBigBoardLeftDiagonal(\"O\", \"WH\", \"X\", \"LA\")\n                } else if (copy_board[0][2] === \"X\") {\n                    this.alterBigBoardRightDiagonal(\"X\", \"WA\", \"O\", \"LH\")\n                }\n                this.setState({\n                    ultimateWin: true,\n                    ultimateWinBoard: copy_board\n                });\n            }\n        }\n    }\n\n    place_partial(bigBoard, outer_row, outer_column, symbol) {\n        // console.log(\"came here\")\n        for (let inner_row = 0; inner_row < 3; inner_row++) {\n            for (let inner_column = 0; inner_column < 3; inner_column++) {\n                bigBoard[outer_row][outer_column][inner_row][inner_column] = symbol\n            }\n        }\n\n        let copyUltimateWinBoard_1 = this.state.ultimateWinBoard.slice()\n        copyUltimateWinBoard_1[outer_row][outer_column] = symbol\n\n        this.setState({\n            bigboard: bigBoard,\n            ultimateWinBoard: copyUltimateWinBoard_1\n        })\n\n        let copyUltimateWinBoard_2 = this.state.ultimateWinBoard.slice()\n        this.check_ultimate_win(copyUltimateWinBoard_2)\n    }\n\n    checkPartialWin(bigBoard) {\n        for (let outer_row = 0; outer_row < 3; outer_row++) {\n            for (let outer_column = 0; outer_column < 3; outer_column++) {\n                for (let i = 0; i < 3; i++) {\n                    if (bigBoard[outer_row][outer_column][i][0] === bigBoard[outer_row][outer_column][i][1] &&\n                        bigBoard[outer_row][outer_column][i][1] === bigBoard[outer_row][outer_column][i][2] &&\n                        bigBoard[outer_row][outer_column][i][0] === bigBoard[outer_row][outer_column][i][2] &&\n                        bigBoard[outer_row][outer_column][i][0] !== \" \"\n                    ) {\n                        if (bigBoard[outer_row][outer_column][i][0] === \"O\") {\n                            this.place_partial(bigBoard, outer_row, outer_column, \"O\");\n                        }\n                        else if (bigBoard[outer_row][outer_column][i][0] === \"X\") {\n                            this.place_partial(bigBoard, outer_row, outer_column, \"X\");\n                        }\n                    }\n                }\n            }\n        }\n\n\n        for (let outer_row = 0; outer_row < 3; outer_row++) {\n            for (let outer_column = 0; outer_column < 3; outer_column++) {\n                for (let i = 0; i < 3; i++) {\n                    if (bigBoard[outer_row][outer_column][0][i] === bigBoard[outer_row][outer_column][1][i] &&\n                        bigBoard[outer_row][outer_column][0][i] === bigBoard[outer_row][outer_column][2][i] &&\n                        bigBoard[outer_row][outer_column][1][i] === bigBoard[outer_row][outer_column][2][i] &&\n                        bigBoard[outer_row][outer_column][0][i] !== \" \"\n                    ) {\n                        if (bigBoard[outer_row][outer_column][0][i] === \"O\") {\n                            this.place_partial(bigBoard, outer_row, outer_column, \"O\");\n\n                        }\n                        else if (bigBoard[outer_row][outer_column][0][i] === \"X\") {\n                            this.place_partial(bigBoard, outer_row, outer_column, \"X\");\n                        }\n                    }\n                }\n            }\n        }\n\n\n        for (let outer_row = 0; outer_row < 3; outer_row++) {\n            for (let outer_column = 0; outer_column < 3; outer_column++) {\n                if (bigBoard[outer_row][outer_column][0][0] === bigBoard[outer_row][outer_column][1][1] &&\n                    bigBoard[outer_row][outer_column][0][0] === bigBoard[outer_row][outer_column][2][2] &&\n                    bigBoard[outer_row][outer_column][1][1] === bigBoard[outer_row][outer_column][2][2] &&\n                    bigBoard[outer_row][outer_column][0][0] !== \" \"\n                ) {\n                    if (bigBoard[outer_row][outer_column][0][0] === \"O\") {\n                        this.place_partial(bigBoard, outer_row, outer_column, \"O\");\n                    }\n                    else if (bigBoard[outer_row][outer_column][0][0] === \"X\") {\n                        this.place_partial(bigBoard, outer_row, outer_column, \"X\");\n                    }\n                }\n            }\n        }\n\n\n\n        for (let outer_row = 0; outer_row < 3; outer_row++) {\n            for (let outer_column = 0; outer_column < 3; outer_column++) {\n                if (bigBoard[outer_row][outer_column][0][2] === bigBoard[outer_row][outer_column][1][1] &&\n                    bigBoard[outer_row][outer_column][0][2] === bigBoard[outer_row][outer_column][2][0] &&\n                    bigBoard[outer_row][outer_column][1][1] === bigBoard[outer_row][outer_column][2][0] &&\n                    bigBoard[outer_row][outer_column][0][2] !== \" \"\n                ) {\n                    if (bigBoard[outer_row][outer_column][0][2] === \"O\") {\n                        this.place_partial(bigBoard, outer_row, outer_column, \"O\");\n                    }\n                    else if (bigBoard[outer_row][outer_column][0][2] === \"X\") {\n                        this.place_partial(bigBoard, outer_row, outer_column, \"X\");\n                    }\n                }\n            }\n        }\n    }\n\n\n\n    checkValidityOfMove(outer_row, outer_column) {\n        if (this.state.ultimateWinBoard[this.state.rowToPlace][this.state.columnToPlace] === \" \") {\n            if (outer_row !== this.state.rowToPlace)\n                return false\n            else if (outer_column !== this.state.columnToPlace)\n                return false\n            else if (outer_row === this.state.rowToPlace && outer_column === this.state.columnToPlace)\n                return true\n        }\n        else\n            return true\n    }\n\n    handleCellClick = (e, outerRow, outerColumn, innerRow, innerColumn) => {\n        if (this.state.startGameValue === true && this.state.ultimateWin === false && this.state.turn === \"HUMAN\") {\n            let copy_bigBoard1 = this.state.bigboard.slice()\n            if (copy_bigBoard1[outerRow][outerColumn][innerRow][innerColumn] === \" \") {\n                if (this.state.moveNumber !== 1) {\n                    if (this.checkValidityOfMove(outerRow, outerColumn) === true) {\n                        copy_bigBoard1[outerRow][outerColumn][innerRow][innerColumn] = \"O\"\n\n                        this.setState({\n                            bigboard: copy_bigBoard1,\n                            turn: \"AGENT\"\n                        })\n\n                        let copy_bigBoard2 = this.state.bigboard.slice()\n                        this.checkPartialWin(copy_bigBoard2)\n\n\n                        if (this.state.ultimateWin === false) {\n                            axios.get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn-ultimate\", {\n                                params: {\n                                    board: JSON.stringify(this.state.bigboard),\n                                    checkboard: JSON.stringify(this.state.ultimateWinBoard),\n                                    previous_move: JSON.stringify([outerRow, outerColumn, innerRow, innerColumn])\n                                },\n                            }) //route to be filled according to flask route name\n                                .then((res) => {\n                                    console.log(res.data)\n                                    let copy_board1 = this.state.bigboard.slice()\n                                    copy_board1[res.data[\"agent-move\"][0]][res.data[\"agent-move\"][1]][res.data[\"agent-move\"][2]][res.data[\"agent-move\"][3]] = \"X\"\n                                    if (this.state.startGameButton === \"Reset Game\") {\n                                        this.setState({\n                                            bigboard: copy_board1,\n                                            moveNumber: this.moveNumber + 1,\n                                            rowToPlace: res.data[\"agent-move\"][2],\n                                            columnToPlace: res.data[\"agent-move\"][3],\n                                            turn: \"HUMAN\"\n                                        })\n\n                                        let copy_bigBoard2 = this.state.bigboard.slice()\n                                        this.checkPartialWin(copy_bigBoard2)\n                                    }\n                                })\n                                .catch((err) => {\n                                    console.log(err);\n                                });\n                        }\n                    }\n                    else {\n                        console.log(\"try again\")\n                    }\n                }\n                else {\n\n                    let copy_bigBoard1 = this.state.bigboard.slice()\n\n                    copy_bigBoard1[outerRow][outerColumn][innerRow][innerColumn] = \"O\"\n\n                    this.setState({\n                        bigboard: copy_bigBoard1,\n                        turn: \"AGENT\"\n                    })\n                    axios.get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn-ultimate\", {\n                        params: {\n                            board: JSON.stringify(this.state.bigboard),\n                            checkboard: JSON.stringify(this.state.ultimateWinBoard),\n                            previous_move: JSON.stringify([outerRow, outerColumn, innerRow, innerColumn])\n                        },\n                    }) //route to be filled according to flask route name\n                        .then((res) => {\n                            console.log(res.data)\n                            let copy_board1 = this.state.bigboard.slice()\n\n                            copy_board1[res.data[\"agent-move\"][0]][res.data[\"agent-move\"][1]][res.data[\"agent-move\"][2]][res.data[\"agent-move\"][3]] = \"X\"\n                            if (this.state.startGameButton === \"Reset Game\") {\n                                this.setState({\n                                    bigboard: copy_board1,\n                                    moveNumber: this.moveNumber + 1,\n                                    rowToPlace: res.data[\"agent-move\"][2],\n                                    columnToPlace: res.data[\"agent-move\"][3],\n                                    turn: \"HUMAN\"\n                                })\n                                let copy_bigBoard2 = this.state.bigboard.slice()\n                                this.checkPartialWin(copy_bigBoard2)\n                            }\n                        })\n                        .catch((err) => {\n                            console.log(err);\n                        });\n                }\n            }\n        }\n    }\n\n    handleStartGame = (e, startGame) => {\n        console.log(startGame)\n\n        if (startGame === \"Start Game\") {\n            this.setState({\n                startGameButton: \"Reset Game\",\n                startGameValue: true\n            });\n        }\n        else if (startGame === \"Reset Game\") {\n            let copy_board = this.state.bigboard;\n\n            for (let outer_row = 0; outer_row < 3; outer_row++) {\n                for (let outer_column = 0; outer_column < 3; outer_column++) {\n                    for (let inner_row = 0; inner_row < 3; inner_row++) {\n                        for (let inner_column = 0; inner_column < 3; inner_column++) {\n                            copy_board[outer_row][outer_column][inner_row][inner_column] = \" \"\n                        }\n                    }\n                }\n            }\n\n            this.setState({\n                bigboard: copy_board,\n                gameBeginner: \" \",\n                startGameValue: false,\n                startGameButton: \"Start Game\",\n                startGameValue: false,\n                ultimateWin: false,\n                rowToPlace: \" \",\n                columnToPlace: \" \",\n                moveNumber: 1,\n                ultimateWinBoard: [\n                    [\" \", \" \", \" \"],\n                    [\" \", \" \", \" \"],\n                    [\" \", \" \", \" \"],\n                ],\n                turn: \" \"\n            });\n        }\n\n        if (this.state.gameBeginner === \"AGENT\") {\n            console.log(\"Agent beginner\")\n            axios.get(\"https://redninjas-tic-tac-toe.herokuapp.com/agent-turn-ultimate\", {\n                params: {\n                    board: JSON.stringify(this.state.bigboard),\n                    checkboard: JSON.stringify(this.state.ultimateWinBoard),\n                    previous_move: JSON.stringify([-1, -1, -1, -1])\n                },\n            }) //route to be filled according to flask route name\n                .then((res) => {\n\n                    let copy_board1 = this.state.bigboard.slice()\n                    copy_board1[res.data[\"agent-move\"][0]][res.data[\"agent-move\"][1]][res.data[\"agent-move\"][2]][res.data[\"agent-move\"][3]] = \"X\"\n\n                    if (this.state.startGameButton === \"Reset Game\") {\n                        this.setState({\n                            bigboard: copy_board1,\n                            rowToPlace: res.data[\"agent-move\"][2],\n                            columnToPlace: res.data[\"agent-move\"][3],\n                            moveNumber: this.moveNumber + 1,\n                            turn: \"HUMAN\"\n                        })\n                        let copy_bigBoard2 = this.state.bigboard.slice()\n                        this.checkPartialWin(copy_bigBoard2)\n                    }\n                })\n        }\n    }\n\n    handleStartHuman = (e) => {\n        console.log(\"Human begins the game!\");\n        this.setState({\n            gameBeginner: \"HUMAN\",\n            turn: \"HUMAN\"\n        });\n    };\n\n    handleStartAgent = (e) => {\n        console.log(\"Agent begins the game!\");\n        this.setState({\n            gameBeginner: \"AGENT\",\n            turn: \"AGENT\"\n        });\n    };\n\n\n    render() {\n        return (\n            <div style={{ marginTop: \"2%\", margin: \"0 auto\", maxWidth: \"90%\" }}>\n                <div style={{ textAlign: \"center\" }}>\n                    <h1 style={heading}>RED NINJA TIC TAC TOE</h1>\n                </div>\n                <Container>\n                    <Container fluid='true'>\n                        {\n                            this.state.bigboard.map((row, outerRow) => (\n                                <Row>\n                                    {\n                                        row.map((column, outerColumn) => (\n\n                                            <Col md style={cellStyle1}\n                                            >\n                                                {\n                                                    this.state.bigboard.map((inner_row, innerRow) => (\n                                                        <Row style={{ maxWidth: \"100%\", margin: \"0 auto\" }}>\n                                                            {\n                                                                inner_row.map((inner_column, innerColumn) => (\n                                                                    <Col md style={outerRow === this.state.rowToPlace && outerColumn === this.state.columnToPlace && this.state.rowToPlace !== \" \" && this.state.columnToPlace !== \" \" ? cellStyle3 : cellStyle2}\n                                                                    className={styles.cellNine}  \n                                                                        onClick={(e) => this.handleCellClick(e, outerRow, outerColumn, innerRow, innerColumn)}>\n\n                                                                        {\n                                                                            <div style={{ textAlign: \"center\" }}>\n                                                                                {this.state.symbol[this.state.bigboard[outerRow][outerColumn][innerRow][innerColumn]]}\n                                                                            </div>\n                                                                        }\n\n                                                                    </Col>\n                                                                ))\n                                                            }\n                                                        </Row>\n                                                    ))\n                                                }\n                                            </Col>\n                                        ))\n                                    }\n                                </Row>\n                            ))\n                        }\n                    </Container>\n                </Container>\n\n                <div style={{}}>\n                    <Button\n                        variant=\"info\"\n                        size=\"lg\"\n                        style={{}}\n                        onClick={(e) => this.handleStartGame(e, this.state.startGameButton)}\n                    >\n                        {this.state.startGameButton}\n                    </Button>{\" \"}\n                </div>\n\n                <Button variant=\"default\" onClick={(e) => this.handleStartHuman(e)}>\n                    Beginner_Human\n            </Button>\n\n\n                <Button variant=\"default\" onClick={(e) => this.handleStartAgent(e)}>\n                    Beginner_Agent\n            </Button>\n            </div>\n        )\n    }\n}\n\nconst cellStyle1 = {\n    backgroundColor: 'black',\n    textAlign: 'center',\n    border: \"1px solid\",\n    width: \"10%\",\n    padding: \"3%\",\n    flexBasis: 0,\n    flexGrow: 1,\n    minWidth: 0,\n    maxWidth: \"90%\"\n}\n\nconst cellStyle2 = {\n    backgroundColor: 'black',\n    textAlign: 'center',\n    border: \"1px solid\",\n    width: \"5%\",\n    height: 60,\n    padding: \"1%\",\n    flexBasis: 0,\n    flexGrow: 1,\n    minWidth: 0,\n    maxWidth: \"90%\",\n}\n\nconst cellStyle3 = {\n    backgroundColor: 'pink',\n    textAlign: 'center',\n    border: \"1px solid\",\n    width: \"10%\",\n    height: 250,\n    padding: \"3%\",\n    // flexBasis: 0,\n    // flexGrow: 1,\n    // minWidth: 0,\n    // maxWidth: \"100%\"\n}\n//   border-collapse: \"separate\"\n// }\nconst heading = {\n    display: \"inline-block\",\n    textAlign: 'center',\n    width: '80%',\n    lineHeight: 1.5\n}\n\n\n//   <i class=\"far fa-grin\"></i>\n{/* <i class=\"fas fa-grin\"></i> */ }\n\n{/* <i class=\"far fa-laugh-wink\"></i> */ }\n{/* <i class=\"fas fa-laugh-wink\"></i> */ }\n\n{/* <i class=\"far fa-sad-cry\"></i> */ }\n{/* <i class=\"fas fa-sad-cry\"></i> */ }\n","import React, { Component } from 'react'\n// import { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse} from \"mdbreact\";\n// import {MDBRow, MDBCard, MDBCardBody,MDBCardTitle, MDBCardText, MDBCol, MDBIcon} from \"mdbreact\";\n// import { Link } from 'react-router-dom'\nimport { Button, Container, Col, Row } from 'react-bootstrap'\n// import axios from 'axios';\nimport Board from './Board.js'\nimport BigBoard from './BigBoard.js'\n// import Sky from 'react-sky';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n// import { render } from 'react-dom';\n\nexport default class GameStarter extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            show_3x3_BoardComponent : false,\n            show_9x9_BoardComponent : false,\n            showGameStarterComponent : true\n        }\n    }\n\n    render () \n    {\n        return (\n          <div style = {{}}>\n\n          {/* <section style = {sectionStyle}></section> */}\n                <Button variant=\"info\" size=\"lg\" \n                onClick = {() => {\n                  this.setState ({\n                        show_3x3_BoardComponent : true,\n                        showGameStarterComponent : false\n                  });\n                }}> 3*3 TIC-TAC-TOE\n                </Button>\n                <Button variant=\"info\" size=\"lg\" \n                onClick = {() => {\n                  this.setState ({\n                        show_9x9_BoardComponent : true,\n                        showGameStarterComponent : false\n                  });\n                }}> 9*9 TIC-TAC-TOE\n                </Button>\n                {this.state.show_3x3_BoardComponent && <Board/>}\n                {this.state.show_9x9_BoardComponent && <BigBoard/>}\n                </div>\n        )\n    }\n}\n\n\n// var sectionStyle = {\n//   width: \"100%\",\n//   height: \"400px\",\n//   backgroundImage: \"url(\" + \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.vectorstock.com%2Froyalty-free-vector%2Fastronaut-standing-at-mars-vector-19656662&psig=AOvVaw2xG1bjZqrv24uSLeNYwXMg&ust=1594645072145000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCIjYl5Dix-oCFQAAAAAdAAAAABAI\" + \")\"\n// };\n{/* <MDBIcon icon=\"space-shuttle\" /> */}\n{/* <MDBIcon icon=\"rocket\" /> */}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\n// import axios from 'axios';\nimport Board from \"./Board.js\";\nimport BigBoard from \"./BigBoard.js\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport styles from \"../static/css/Landing.module.css\";\nimport common from \"../static/css/Common.module.css\";\n\nexport default class Landing extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={styles.landingBody}>\n        <div className={styles.content}>\n          <h1 className={styles.heading}>The Mars Rover Mission</h1>\n          <h4 className={styles.subheading}>\n            This game is an AI driven Tic Tac Toe <br /> The game has\n            incremental levels of difficulty, but let's see if you can win\n            against the ultimate 3x3!\n          </h4>\n          <Link to=\"/three\">\n            <Button variant=\"danger\" size=\"lg\">\n              {\" \"}\n              3*3 TIC-TAC-TOE\n            </Button>\n          </Link>\n          <Link to=\"/nine\">\n            <Button variant=\"danger\" size=\"lg\">\n              {\" \"}\n              9*9 TIC-TAC-TOE\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","// import logo from './logo.svg';\nimport React, { Component } from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Board from './components/Board'\nimport BigBoard from './components/BigBoard'\nimport GameStarter from './components/GameStarter'\nimport Landing from './components/Landing'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import axios from 'axios';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/three' component={Board} />\n            <Route exact path='/nine' component={BigBoard} />\n          </Switch>\n        </Router>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Landing_content__1ob_o\",\"landingBody\":\"Landing_landingBody__2x6EC\",\"heading\":\"Landing_heading__3u5VM\",\"subheading\":\"Landing_subheading__25-7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingBody\":\"Common_landingBody__EM0V7\",\"heading\":\"Common_heading__3lD4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellThree\":\"board_cellThree__3lv1K\",\"cellNine\":\"board_cellNine__3jxyc\",\"iconThree\":\"board_iconThree__uBv8I\",\"iconNine\":\"board_iconNine__OWylL\"};"],"sourceRoot":""}